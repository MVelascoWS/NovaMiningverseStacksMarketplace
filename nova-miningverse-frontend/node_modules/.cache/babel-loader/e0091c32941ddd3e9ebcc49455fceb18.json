{"ast":null,"code":"'use strict';\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction getZoneFileTemplate() {\n  return '{$origin}\\n\\\n{$ttl}\\n\\\n\\n\\\n; SOA Record\\n\\\n{name} {ttl}    IN  SOA {mname}{rname}(\\n\\\n{serial} ;serial\\n\\\n{refresh} ;refresh\\n\\\n{retry} ;retry\\n\\\n{expire} ;expire\\n\\\n{minimum} ;minimum ttl\\n\\\n)\\n\\\n\\n\\\n; NS Records\\n\\\n{ns}\\n\\\n\\n\\\n; MX Records\\n\\\n{mx}\\n\\\n\\n\\\n; A Records\\n\\\n{a}\\n\\\n\\n\\\n; AAAA Records\\n\\\n{aaaa}\\n\\\n\\n\\\n; CNAME Records\\n\\\n{cname}\\n\\\n\\n\\\n; PTR Records\\n\\\n{ptr}\\n\\\n\\n\\\n; TXT Records\\n\\\n{txt}\\n\\\n\\n\\\n; SRV Records\\n\\\n{srv}\\n\\\n\\n\\\n; SPF Records\\n\\\n{spf}\\n\\\n\\n\\\n; URI Records\\n\\\n{uri}\\n\\\n';\n}\n\nfunction makeZoneFile(jsonZoneFile, template) {\n  if (template === void 0) {\n    template = getZoneFileTemplate();\n  }\n\n  template = processOrigin(jsonZoneFile['$origin'], template);\n  template = processTTL(jsonZoneFile['$ttl'], template);\n  template = processSOA(jsonZoneFile['soa'], template);\n  template = processNS(jsonZoneFile['ns'], template);\n  template = processA(jsonZoneFile['a'], template);\n  template = processAAAA(jsonZoneFile['aaaa'], template);\n  template = processCNAME(jsonZoneFile['cname'], template);\n  template = processMX(jsonZoneFile['mx'], template);\n  template = processPTR(jsonZoneFile['ptr'], template);\n  template = processTXT(jsonZoneFile['txt'], template);\n  template = processSRV(jsonZoneFile['srv'], template);\n  template = processSPF(jsonZoneFile['spf'], template);\n  template = processURI(jsonZoneFile['uri'], template);\n  template = processValues(jsonZoneFile, template);\n  return template.replace(/\\n{2,}/gim, '\\n\\n');\n}\n\nfunction processOrigin(data, template) {\n  var ret = '';\n\n  if (typeof data !== 'undefined') {\n    ret += '$ORIGIN ' + data;\n  }\n\n  return template.replace('{$origin}', ret);\n}\n\nfunction processTTL(data, template) {\n  var ret = '';\n\n  if (typeof data !== 'undefined') {\n    ret += '$TTL ' + data;\n  }\n\n  return template.replace('{$ttl}', ret);\n}\n\nfunction processSOA(data, template) {\n  var ret = template;\n\n  if (typeof data !== 'undefined') {\n    data.name = data.name || '@';\n    data.ttl = data.ttl || '';\n\n    for (var key in data) {\n      var value = data[key];\n      ret = ret.replace('{' + key + '}', value + '\\t');\n    }\n  }\n\n  return ret;\n}\n\nfunction processNS(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator = _createForOfIteratorHelperLoose(data), _step; !(_step = _iterator()).done;) {\n      var record = _step.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tNS\\t' + record.host + '\\n';\n    }\n  }\n\n  return template.replace('{ns}', ret);\n}\n\nfunction processA(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(data), _step2; !(_step2 = _iterator2()).done;) {\n      var record = _step2.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tA\\t' + record.ip + '\\n';\n    }\n  }\n\n  return template.replace('{a}', ret);\n}\n\nfunction processAAAA(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose(data), _step3; !(_step3 = _iterator3()).done;) {\n      var record = _step3.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tAAAA\\t' + record.ip + '\\n';\n    }\n  }\n\n  return template.replace('{aaaa}', ret);\n}\n\nfunction processCNAME(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator4 = _createForOfIteratorHelperLoose(data), _step4; !(_step4 = _iterator4()).done;) {\n      var record = _step4.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tCNAME\\t' + record.alias + '\\n';\n    }\n  }\n\n  return template.replace('{cname}', ret);\n}\n\nfunction processMX(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator5 = _createForOfIteratorHelperLoose(data), _step5; !(_step5 = _iterator5()).done;) {\n      var record = _step5.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tMX\\t' + record.preference + '\\t' + record.host + '\\n';\n    }\n  }\n\n  return template.replace('{mx}', ret);\n}\n\nfunction processPTR(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator6 = _createForOfIteratorHelperLoose(data), _step6; !(_step6 = _iterator6()).done;) {\n      var record = _step6.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tPTR\\t' + record.host + '\\n';\n    }\n  }\n\n  return template.replace('{ptr}', ret);\n}\n\nfunction processTXT(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator7 = _createForOfIteratorHelperLoose(data), _step7; !(_step7 = _iterator7()).done;) {\n      var record = _step7.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tTXT\\t';\n      var txtData = record.txt;\n\n      if (typeof txtData === 'string') {\n        ret += '\"' + txtData + '\"';\n      } else if (txtData instanceof Array) {\n        ret += txtData.map(function (datum) {\n          return '\"' + datum + '\"';\n        }).join(' ');\n      }\n\n      ret += '\\n';\n    }\n  }\n\n  return template.replace('{txt}', ret);\n}\n\nfunction processSRV(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator8 = _createForOfIteratorHelperLoose(data), _step8; !(_step8 = _iterator8()).done;) {\n      var record = _step8.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSRV\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += record.port + '\\t';\n      ret += record.target + '\\n';\n    }\n  }\n\n  return template.replace('{srv}', ret);\n}\n\nfunction processSPF(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator9 = _createForOfIteratorHelperLoose(data), _step9; !(_step9 = _iterator9()).done;) {\n      var record = _step9.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSPF\\t' + record.data + '\\n';\n    }\n  }\n\n  return template.replace('{spf}', ret);\n}\n\nfunction processURI(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator10 = _createForOfIteratorHelperLoose(data), _step10; !(_step10 = _iterator10()).done;) {\n      var record = _step10.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tURI\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += '\"' + record.target + '\"\\n';\n    }\n  }\n\n  return template.replace('{uri}', ret);\n}\n\nfunction processValues(jsonZoneFile, template) {\n  template = template.replace('{zone}', jsonZoneFile['$origin'] || (jsonZoneFile['soa'] ? jsonZoneFile['soa']['name'] : false) || '');\n  template = template.replace('{datetime}', new Date().toISOString());\n  var time = Math.round(Date.now() / 1000);\n  return template.replace('{time}', \"\" + time);\n}\n\nfunction parseZoneFile(text) {\n  text = removeComments(text);\n  text = flatten(text);\n  return parseRRs(text);\n}\n\nfunction removeComments(text) {\n  var re = /(^|[^\\\\]);.*/g;\n  return text.replace(re, function (_m, g1) {\n    return g1 ? g1 : ''; // if g1 is set/matched, re-insert it, else remove\n  });\n}\n\nfunction flatten(text) {\n  var captured = [];\n  var re = /\\([\\s\\S]*?\\)/gim;\n  var match = re.exec(text);\n\n  while (match !== null) {\n    var replacement = match[0].replace(/\\s+/gm, ' ');\n    captured.push({\n      match: match,\n      replacement: replacement\n    }); // captured Text, index, input\n\n    match = re.exec(text);\n  }\n\n  var arrText = text.split('');\n\n  for (var _i = 0, _captured = captured; _i < _captured.length; _i++) {\n    var cur = _captured[_i];\n    var _match = cur.match,\n        _replacement = cur.replacement;\n    arrText.splice(_match.index, _match[0].length, _replacement);\n  }\n\n  return arrText.join('').replace(/\\(|\\)/gim, ' ');\n}\n\nfunction parseRRs(text) {\n  var ret = {};\n  var rrs = text.split('\\n');\n\n  for (var _iterator = _createForOfIteratorHelperLoose(rrs), _step; !(_step = _iterator()).done;) {\n    var rr = _step.value;\n\n    if (!rr || !rr.trim()) {\n      continue;\n    }\n\n    var uRR = rr.toUpperCase();\n\n    if (/\\s+TXT\\s+/.test(uRR)) {\n      ret.txt = ret.txt || [];\n      ret.txt.push(parseTXT(rr));\n    } else if (uRR.indexOf('$ORIGIN') === 0) {\n      ret.$origin = rr.split(/\\s+/g)[1];\n    } else if (uRR.indexOf('$TTL') === 0) {\n      ret.$ttl = parseInt(rr.split(/\\s+/g)[1], 10);\n    } else if (/\\s+SOA\\s+/.test(uRR)) {\n      ret.soa = parseSOA(rr);\n    } else if (/\\s+NS\\s+/.test(uRR)) {\n      ret.ns = ret.ns || [];\n      ret.ns.push(parseNS(rr));\n    } else if (/\\s+A\\s+/.test(uRR)) {\n      ret.a = ret.a || [];\n      ret.a.push(parseA(rr, ret.a));\n    } else if (/\\s+AAAA\\s+/.test(uRR)) {\n      ret.aaaa = ret.aaaa || [];\n      ret.aaaa.push(parseAAAA(rr));\n    } else if (/\\s+CNAME\\s+/.test(uRR)) {\n      ret.cname = ret.cname || [];\n      ret.cname.push(parseCNAME(rr));\n    } else if (/\\s+MX\\s+/.test(uRR)) {\n      ret.mx = ret.mx || [];\n      ret.mx.push(parseMX(rr));\n    } else if (/\\s+PTR\\s+/.test(uRR)) {\n      ret.ptr = ret.ptr || [];\n      ret.ptr.push(parsePTR(rr, ret.ptr, ret.$origin));\n    } else if (/\\s+SRV\\s+/.test(uRR)) {\n      ret.srv = ret.srv || [];\n      ret.srv.push(parseSRV(rr));\n    } else if (/\\s+SPF\\s+/.test(uRR)) {\n      ret.spf = ret.spf || [];\n      ret.spf.push(parseSPF(rr));\n    } else if (/\\s+URI\\s+/.test(uRR)) {\n      ret.uri = ret.uri || [];\n      ret.uri.push(parseURI(rr));\n    }\n  }\n\n  return ret;\n}\n\nfunction parseSOA(rr) {\n  var soa = {};\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  soa.name = rrTokens[0];\n  soa.minimum = parseInt(rrTokens[l - 1], 10);\n  soa.expire = parseInt(rrTokens[l - 2], 10);\n  soa.retry = parseInt(rrTokens[l - 3], 10);\n  soa.refresh = parseInt(rrTokens[l - 4], 10);\n  soa.serial = parseInt(rrTokens[l - 5], 10);\n  soa.rname = rrTokens[l - 6];\n  soa.mname = rrTokens[l - 7];\n  if (!isNaN(rrTokens[1])) soa.ttl = parseInt(rrTokens[1], 10);\n  return soa;\n}\n\nfunction parseNS(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    host: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseA(rr, recordsSoFar) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var urrTokens = rr.trim().toUpperCase().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1]\n  };\n\n  if (urrTokens.lastIndexOf('A') === 0) {\n    if (recordsSoFar.length) {\n      result.name = recordsSoFar[recordsSoFar.length - 1].name;\n    } else {\n      result.name = '@';\n    }\n  }\n\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseAAAA(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseCNAME(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    alias: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseMX(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    preference: parseInt(rrTokens[l - 2], 10),\n    host: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseTXT(rr) {\n  var rrTokens = rr.trim().match(/[^\\s\"']+|\"[^\"]*\"|'[^']*'/g);\n  if (!rrTokens) throw new Error('Failure to tokenize TXT record');\n  var l = rrTokens.length;\n  var indexTXT = rrTokens.indexOf('TXT');\n\n  function stripText(txt) {\n    if (txt.indexOf('\"') > -1) {\n      txt = txt.split('\"')[1];\n    }\n\n    return txt;\n  }\n\n  var tokenTxt;\n\n  if (l - indexTXT - 1 > 1) {\n    tokenTxt = [].concat(rrTokens.slice(indexTXT + 1).map(stripText));\n  } else {\n    tokenTxt = stripText(rrTokens[l - 1]);\n  }\n\n  var result = {\n    name: rrTokens[0],\n    txt: tokenTxt\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parsePTR(rr, recordsSoFar, currentOrigin) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var urrTokens = rr.trim().toUpperCase().split(/\\s+/g);\n\n  if (urrTokens.lastIndexOf('PTR') === 0 && recordsSoFar[recordsSoFar.length - 1]) {\n    rrTokens.unshift(recordsSoFar[recordsSoFar.length - 1].name);\n  }\n\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    fullname: rrTokens[0] + '.' + currentOrigin,\n    host: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSRV(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1],\n    priority: parseInt(rrTokens[l - 4], 10),\n    weight: parseInt(rrTokens[l - 3], 10),\n    port: parseInt(rrTokens[l - 2], 10)\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSPF(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var result = {\n    name: rrTokens[0],\n    data: ''\n  };\n  var l = rrTokens.length;\n\n  while (l-- > 4) {\n    result.data = rrTokens[l] + ' ' + result.data.trim();\n  }\n\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseURI(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1].replace(/\"/g, ''),\n    priority: parseInt(rrTokens[l - 3], 10),\n    weight: parseInt(rrTokens[l - 2], 10)\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nvar ZoneFile = /*#__PURE__*/function () {\n  function ZoneFile(zoneFile) {\n    if (typeof zoneFile === 'object') {\n      this.jsonZoneFile = JSON.parse(JSON.stringify(zoneFile));\n    } else if (typeof zoneFile === 'string') {\n      this.jsonZoneFile = parseZoneFile(zoneFile);\n    } else {\n      this.jsonZoneFile = undefined;\n    }\n  }\n\n  var _proto = ZoneFile.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return this.jsonZoneFile;\n  };\n\n  _proto.toString = function toString() {\n    return makeZoneFile(this.toJSON());\n  };\n\n  return ZoneFile;\n}();\n\nexports.ZoneFile = ZoneFile;\nexports.makeZoneFile = makeZoneFile;\nexports.parseZoneFile = parseZoneFile;","map":{"version":3,"mappings":"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","names":["getZoneFileTemplate","makeZoneFile","jsonZoneFile","template","processOrigin","processTTL","processSOA","processNS","processA","processAAAA","processCNAME","processMX","processPTR","processTXT","processSRV","processSPF","processURI","processValues","replace","data","ret","name","ttl","key","value","record","host","ip","alias","preference","txtData","txt","Array","map","datum","join","priority","weight","port","target","Date","toISOString","time","Math","round","now","parseZoneFile","text","removeComments","flatten","parseRRs","re","_m","g1","captured","match","exec","replacement","push","arrText","split","cur","splice","index","length","rrs","rr","trim","uRR","toUpperCase","test","parseTXT","indexOf","$origin","$ttl","parseInt","soa","parseSOA","ns","parseNS","a","parseA","aaaa","parseAAAA","cname","parseCNAME","mx","parseMX","ptr","parsePTR","srv","parseSRV","spf","parseSPF","uri","parseURI","rrTokens","l","minimum","expire","retry","refresh","serial","rname","mname","isNaN","result","recordsSoFar","urrTokens","lastIndexOf","Error","indexTXT","stripText","tokenTxt","slice","currentOrigin","unshift","fullname","ZoneFile","zoneFile","JSON","parse","stringify","undefined","_proto","toJSON","toString"],"sources":["D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\zone-file\\src\\zoneFileTemplate.ts","D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\zone-file\\src\\makeZoneFile.ts","D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\zone-file\\src\\parseZoneFile.ts","D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\zone-file\\src\\zoneFile.ts"],"sourcesContent":["export function getZoneFileTemplate() {\n  return '{$origin}\\n\\\n{$ttl}\\n\\\n\\n\\\n; SOA Record\\n\\\n{name} {ttl}    IN  SOA {mname}{rname}(\\n\\\n{serial} ;serial\\n\\\n{refresh} ;refresh\\n\\\n{retry} ;retry\\n\\\n{expire} ;expire\\n\\\n{minimum} ;minimum ttl\\n\\\n)\\n\\\n\\n\\\n; NS Records\\n\\\n{ns}\\n\\\n\\n\\\n; MX Records\\n\\\n{mx}\\n\\\n\\n\\\n; A Records\\n\\\n{a}\\n\\\n\\n\\\n; AAAA Records\\n\\\n{aaaa}\\n\\\n\\n\\\n; CNAME Records\\n\\\n{cname}\\n\\\n\\n\\\n; PTR Records\\n\\\n{ptr}\\n\\\n\\n\\\n; TXT Records\\n\\\n{txt}\\n\\\n\\n\\\n; SRV Records\\n\\\n{srv}\\n\\\n\\n\\\n; SPF Records\\n\\\n{spf}\\n\\\n\\n\\\n; URI Records\\n\\\n{uri}\\n\\\n';\n}\n","import {\n  AType,\n  CNAMEType,\n  MXType,\n  NSType,\n  SoaType,\n  SPFType,\n  SRVType,\n  TXTType,\n  URIType,\n  ZoneFileObject,\n} from './zoneFile';\n\nimport { getZoneFileTemplate } from './zoneFileTemplate';\n\nexport function makeZoneFile(jsonZoneFile: ZoneFileObject, template: string = getZoneFileTemplate()) {\n  template = processOrigin(jsonZoneFile['$origin'], template);\n  template = processTTL(jsonZoneFile['$ttl'], template);\n  template = processSOA(jsonZoneFile['soa'], template);\n  template = processNS(jsonZoneFile['ns'], template);\n  template = processA(jsonZoneFile['a'], template);\n  template = processAAAA(jsonZoneFile['aaaa'], template);\n  template = processCNAME(jsonZoneFile['cname'], template);\n  template = processMX(jsonZoneFile['mx'], template);\n  template = processPTR(jsonZoneFile['ptr'], template);\n  template = processTXT(jsonZoneFile['txt'], template);\n  template = processSRV(jsonZoneFile['srv'], template);\n  template = processSPF(jsonZoneFile['spf'], template);\n  template = processURI(jsonZoneFile['uri'], template);\n  template = processValues(jsonZoneFile, template);\n  return template.replace(/\\n{2,}/gim, '\\n\\n');\n}\n\nfunction processOrigin(data: string | undefined, template: string) {\n  let ret = '';\n  if (typeof data !== 'undefined') {\n    ret += '$ORIGIN ' + data;\n  }\n  return template.replace('{$origin}', ret);\n}\n\nfunction processTTL(data: number | undefined, template: string) {\n  let ret = '';\n  if (typeof data !== 'undefined') {\n    ret += '$TTL ' + data;\n  }\n  return template.replace('{$ttl}', ret);\n}\n\nfunction processSOA(data: SoaType | undefined, template: string) {\n  let ret = template;\n  if (typeof data !== 'undefined') {\n    data.name = data.name || '@';\n    data.ttl = data.ttl || '';\n    for (const key in data) {\n      const value = (data as Record<string, string>)[key];\n      ret = ret.replace('{' + key + '}', value + '\\t');\n    }\n  }\n  return ret;\n}\n\nfunction processNS(data: NSType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tNS\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{ns}', ret);\n}\n\nfunction processA(data: AType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tA\\t' + record.ip + '\\n';\n    }\n  }\n  return template.replace('{a}', ret);\n}\n\nfunction processAAAA(data: AType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tAAAA\\t' + record.ip + '\\n';\n    }\n  }\n  return template.replace('{aaaa}', ret);\n}\n\nfunction processCNAME(data: CNAMEType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tCNAME\\t' + record.alias + '\\n';\n    }\n  }\n  return template.replace('{cname}', ret);\n}\n\nfunction processMX(data: MXType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tMX\\t' + record.preference + '\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{mx}', ret);\n}\n\nfunction processPTR(data: NSType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tPTR\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{ptr}', ret);\n}\n\nfunction processTXT(data: TXTType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tTXT\\t';\n      const txtData = record.txt;\n      if (typeof txtData === 'string') {\n        ret += '\"' + txtData + '\"';\n      } else if (txtData instanceof Array) {\n        ret += txtData\n          .map(function(datum) {\n            return '\"' + datum + '\"';\n          })\n          .join(' ');\n      }\n      ret += '\\n';\n    }\n  }\n  return template.replace('{txt}', ret);\n}\n\nfunction processSRV(data: SRVType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSRV\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += record.port + '\\t';\n      ret += record.target + '\\n';\n    }\n  }\n  return template.replace('{srv}', ret);\n}\n\nfunction processSPF(data: SPFType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSPF\\t' + record.data + '\\n';\n    }\n  }\n  return template.replace('{spf}', ret);\n}\n\nfunction processURI(data: URIType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tURI\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += '\"' + record.target + '\"\\n';\n    }\n  }\n  return template.replace('{uri}', ret);\n}\n\nfunction processValues(jsonZoneFile: ZoneFileObject, template: string) {\n  template = template.replace(\n    '{zone}',\n    jsonZoneFile['$origin'] || (jsonZoneFile['soa'] ? jsonZoneFile['soa']['name'] : false) || ''\n  );\n  template = template.replace('{datetime}', new Date().toISOString());\n  const time = Math.round(Date.now() / 1000);\n  return template.replace('{time}', `${time}`);\n}\n","import {\n  NSType,\n  AType,\n  CNAMEType,\n  MXType,\n  TXTType,\n  SRVType,\n  SPFType,\n  URIType,\n  ZoneFileObject,\n  SoaType,\n} from './zoneFile';\n\nexport function parseZoneFile(text: string) {\n  text = removeComments(text);\n  text = flatten(text);\n  return parseRRs(text);\n}\n\nfunction removeComments(text: string) {\n  const re = /(^|[^\\\\]);.*/g;\n  return text.replace(re, function(_m, g1) {\n    return g1 ? g1 : ''; // if g1 is set/matched, re-insert it, else remove\n  });\n}\n\nfunction flatten(text: string) {\n  const captured = [];\n  const re = /\\([\\s\\S]*?\\)/gim;\n  let match = re.exec(text);\n  while (match !== null) {\n    const replacement = match[0].replace(/\\s+/gm, ' ');\n    captured.push({ match, replacement });\n    // captured Text, index, input\n    match = re.exec(text);\n  }\n  const arrText = text.split('');\n  for (const cur of captured) {\n    const { match, replacement } = cur;\n    arrText.splice(match.index, match[0].length, replacement);\n  }\n  return arrText.join('').replace(/\\(|\\)/gim, ' ');\n}\n\nfunction parseRRs(text: string) {\n  const ret: ZoneFileObject = {};\n  const rrs = text.split('\\n');\n  for (const rr of rrs) {\n    if (!rr || !rr.trim()) {\n      continue;\n    }\n    const uRR = rr.toUpperCase();\n    if (/\\s+TXT\\s+/.test(uRR)) {\n      ret.txt = ret.txt || [];\n      ret.txt.push(parseTXT(rr));\n    } else if (uRR.indexOf('$ORIGIN') === 0) {\n      ret.$origin = rr.split(/\\s+/g)[1];\n    } else if (uRR.indexOf('$TTL') === 0) {\n      ret.$ttl = parseInt(rr.split(/\\s+/g)[1], 10);\n    } else if (/\\s+SOA\\s+/.test(uRR)) {\n      ret.soa = parseSOA(rr);\n    } else if (/\\s+NS\\s+/.test(uRR)) {\n      ret.ns = ret.ns || [];\n      ret.ns.push(parseNS(rr));\n    } else if (/\\s+A\\s+/.test(uRR)) {\n      ret.a = ret.a || [];\n      ret.a.push(parseA(rr, ret.a));\n    } else if (/\\s+AAAA\\s+/.test(uRR)) {\n      ret.aaaa = ret.aaaa || [];\n      ret.aaaa.push(parseAAAA(rr));\n    } else if (/\\s+CNAME\\s+/.test(uRR)) {\n      ret.cname = ret.cname || [];\n      ret.cname.push(parseCNAME(rr));\n    } else if (/\\s+MX\\s+/.test(uRR)) {\n      ret.mx = ret.mx || [];\n      ret.mx.push(parseMX(rr));\n    } else if (/\\s+PTR\\s+/.test(uRR)) {\n      ret.ptr = ret.ptr || [];\n      ret.ptr.push(parsePTR(rr, ret.ptr, ret.$origin));\n    } else if (/\\s+SRV\\s+/.test(uRR)) {\n      ret.srv = ret.srv || [];\n      ret.srv.push(parseSRV(rr));\n    } else if (/\\s+SPF\\s+/.test(uRR)) {\n      ret.spf = ret.spf || [];\n      ret.spf.push(parseSPF(rr));\n    } else if (/\\s+URI\\s+/.test(uRR)) {\n      ret.uri = ret.uri || [];\n      ret.uri.push(parseURI(rr));\n    }\n  }\n  return ret;\n}\n\nfunction parseSOA(rr: string) {\n  const soa: SoaType = {};\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  soa.name = rrTokens[0];\n  soa.minimum = parseInt(rrTokens[l - 1], 10);\n  soa.expire = parseInt(rrTokens[l - 2], 10);\n  soa.retry = parseInt(rrTokens[l - 3], 10);\n  soa.refresh = parseInt(rrTokens[l - 4], 10);\n  soa.serial = parseInt(rrTokens[l - 5], 10);\n  soa.rname = rrTokens[l - 6];\n  soa.mname = rrTokens[l - 7];\n  if (!isNaN((rrTokens[1] as unknown) as number)) soa.ttl = parseInt(rrTokens[1], 10);\n  return soa;\n}\n\nfunction parseNS(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: NSType = {\n    name: rrTokens[0],\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseA(rr: string, recordsSoFar: AType[]) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const urrTokens = rr\n    .trim()\n    .toUpperCase()\n    .split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: AType = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1],\n  };\n\n  if (urrTokens.lastIndexOf('A') === 0) {\n    if (recordsSoFar.length) {\n      result.name = recordsSoFar[recordsSoFar.length - 1].name;\n    } else {\n      result.name = '@';\n    }\n  }\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseAAAA(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: AType = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseCNAME(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: CNAMEType = {\n    name: rrTokens[0],\n    alias: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseMX(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: MXType = {\n    name: rrTokens[0],\n    preference: parseInt(rrTokens[l - 2], 10),\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseTXT(rr: string) {\n  const rrTokens = rr.trim().match(/[^\\s\"']+|\"[^\"]*\"|'[^']*'/g);\n  if (!rrTokens) throw new Error('Failure to tokenize TXT record');\n  const l = rrTokens.length;\n  const indexTXT = rrTokens.indexOf('TXT');\n\n  function stripText(txt: string) {\n    if (txt.indexOf('\"') > -1) {\n      txt = txt.split('\"')[1];\n    }\n    return txt;\n  }\n\n  let tokenTxt: string | string[];\n  if (l - indexTXT - 1 > 1) {\n    tokenTxt = [...rrTokens.slice(indexTXT + 1).map(stripText)];\n  } else {\n    tokenTxt = stripText(rrTokens[l - 1]);\n  }\n\n  const result: TXTType = {\n    name: rrTokens[0],\n    txt: tokenTxt,\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parsePTR(rr: string, recordsSoFar: NSType[], currentOrigin: string | undefined) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const urrTokens = rr\n    .trim()\n    .toUpperCase()\n    .split(/\\s+/g);\n\n  if (urrTokens.lastIndexOf('PTR') === 0 && recordsSoFar[recordsSoFar.length - 1]) {\n    rrTokens.unshift(recordsSoFar[recordsSoFar.length - 1].name as string);\n  }\n\n  const l = rrTokens.length;\n  const result: NSType = {\n    name: rrTokens[0],\n    fullname: rrTokens[0] + '.' + currentOrigin,\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSRV(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: SRVType = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1],\n    priority: parseInt(rrTokens[l - 4], 10),\n    weight: parseInt(rrTokens[l - 3], 10),\n    port: parseInt(rrTokens[l - 2], 10),\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSPF(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const result: SPFType = {\n    name: rrTokens[0],\n    data: '',\n  };\n\n  let l = rrTokens.length;\n  while (l-- > 4) {\n    result.data = rrTokens[l] + ' ' + result.data.trim();\n  }\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseURI(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: URIType = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1].replace(/\"/g, ''),\n    priority: parseInt(rrTokens[l - 3], 10),\n    weight: parseInt(rrTokens[l - 2], 10),\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n","import { makeZoneFile } from './makeZoneFile';\nimport { parseZoneFile } from './parseZoneFile';\n\nexport type SoaType = {\n  name?: string;\n  ttl?: number | string;\n  minimum?: number;\n  expire?: number;\n  retry?: number;\n  refresh?: number;\n  serial?: number;\n  rname?: string;\n  mname?: string;\n};\nexport type NSType = { name: string; ttl?: number; host: string; fullname?: string };\nexport type AType = { name: string; ttl?: number; ip: string };\nexport type CNAMEType = { name: string; ttl?: number; alias: string };\nexport type MXType = { name: string; ttl?: number; host: string; preference: number };\nexport type TXTType = { name: string; ttl?: number; txt: string | string[] };\nexport type SRVType = { name: string; ttl?: number; priority: number; weight: number; port: number; target: string };\nexport type SPFType = { name: string; ttl?: number; data: string };\nexport type URIType = { name: string; ttl?: number; priority: number; weight: number; target: string };\n\nexport type ZoneFileObject = {\n  $origin?: string;\n  $ttl?: number;\n  soa?: SoaType;\n  ns?: NSType[];\n  a?: AType[];\n  aaaa?: AType[];\n  cname?: CNAMEType[];\n  mx?: MXType[];\n  ptr?: NSType[];\n  txt?: TXTType[];\n  srv?: SRVType[];\n  spf?: SPFType[];\n  uri?: URIType[];\n  $domain?: string;\n};\n\nexport class ZoneFile {\n  jsonZoneFile: ZoneFileObject;\n\n  constructor(zoneFile: ZoneFileObject | string) {\n    if (typeof zoneFile === 'object') {\n      this.jsonZoneFile = JSON.parse(JSON.stringify(zoneFile));\n    } else if (typeof zoneFile === 'string') {\n      this.jsonZoneFile = parseZoneFile(zoneFile);\n    } else {\n      this.jsonZoneFile = (undefined as unknown) as ZoneFileObject;\n    }\n  }\n\n  toJSON() {\n    return this.jsonZoneFile;\n  }\n\n  toString() {\n    return makeZoneFile(this.toJSON());\n  }\n}\n"]},"metadata":{},"sourceType":"script"}