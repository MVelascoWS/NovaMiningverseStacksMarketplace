{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashSha256Async = exports.hashSha256 = void 0;\n\nconst sha256_1 = require(\"@noble/hashes/sha256\");\n\nfunction hashSha256(input) {\n  return Buffer.from((0, sha256_1.sha256)(input));\n}\n\nexports.hashSha256 = hashSha256;\n\nfunction hashSha256Async(input) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      const isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n\n      if (isSubtleCryptoAvailable) {\n        // Use the W3C Web Crypto API if available (running in a web browser).\n        const buffer = typeof input === 'string' ? Buffer.from(input) : input;\n        const hash = yield crypto.subtle.digest('SHA-256', buffer);\n        return Buffer.from(hash);\n      } else {\n        // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n        const nodeCrypto = require('crypto');\n\n        if (!nodeCrypto.createHash) {\n          throw new Error('`crypto` module does not contain `createHash`');\n        }\n\n        return Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest());\n      }\n    } catch (error) {\n      console.log(error);\n      console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' + 'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' + 'Falling back to JS implementation.');\n      return Promise.resolve(hashSha256(input));\n    }\n  });\n}\n\nexports.hashSha256Async = hashSha256Async;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA,SAAgBA,UAAhB,CAA2BC,KAA3B,EAAiD;EAC/C,OAAOC,MAAM,CAACC,IAAP,CAAY,qBAAOF,KAAP,CAAZ,CAAP;AACD;;AAFDG;;AAIA,SAAsBC,eAAtB,CAAsCJ,KAAtC,EAA4D;;IAC1D,IAAI;MACF,MAAMK,uBAAuB,GAC3B,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,MAAd,KAAyB,WAD5D;;MAEA,IAAIF,uBAAJ,EAA6B;QAC3B;QACA,MAAMG,MAAM,GAAG,OAAOR,KAAP,KAAiB,QAAjB,GAA4BC,MAAM,CAACC,IAAP,CAAYF,KAAZ,CAA5B,GAAiDA,KAAhE;QACA,MAAMS,IAAI,GAAG,MAAMH,MAAM,CAACC,MAAP,CAAcG,MAAd,CAAqB,SAArB,EAAgCF,MAAhC,CAAnB;QACA,OAAOP,MAAM,CAACC,IAAP,CAAYO,IAAZ,CAAP;MACD,CALD,MAKO;QACL;QACA,MAAME,UAAU,GAAGC,OAAO,CAAC,QAAD,CAA1B;;QACA,IAAI,CAACD,UAAU,CAACE,UAAhB,EAA4B;UAC1B,MAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;QACD;;QACD,OAAOC,OAAO,CAACC,OAAR,CAAgBL,UAAU,CAACE,UAAX,CAAsB,QAAtB,EAAgCI,MAAhC,CAAuCjB,KAAvC,EAA8CU,MAA9C,EAAhB,CAAP;MACD;IACF,CAhBD,CAgBE,OAAOQ,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAC,OAAO,CAACC,GAAR,CACE,8EACE,6EADF,GAEE,oCAHJ;MAKA,OAAOL,OAAO,CAACC,OAAR,CAAgBjB,UAAU,CAACC,KAAD,CAA1B,CAAP;IACD;EACF;AAAA;;AA1BDG","names":["hashSha256","input","Buffer","from","exports","hashSha256Async","isSubtleCryptoAvailable","crypto","subtle","buffer","hash","digest","nodeCrypto","require","createHash","Error","Promise","resolve","update","error","console","log"],"sources":["cryptoClients/sha256.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}