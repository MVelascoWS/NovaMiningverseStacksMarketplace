{"ast":null,"code":"\"use strict\";\n\nfunction t(t, r) {\n  (null == r || r > t.length) && (r = t.length);\n\n  for (var n = 0, e = new Array(r); n < r; n++) e[n] = t[n];\n\n  return e;\n}\n\nfunction r(r, n) {\n  var e;\n\n  if (\"undefined\" == typeof Symbol || null == r[Symbol.iterator]) {\n    if (Array.isArray(r) || (e = function (r, n) {\n      if (r) {\n        if (\"string\" == typeof r) return t(r, void 0);\n        var e = Object.prototype.toString.call(r).slice(8, -1);\n        return \"Object\" === e && r.constructor && (e = r.constructor.name), \"Map\" === e || \"Set\" === e ? Array.from(r) : \"Arguments\" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e) ? t(r, void 0) : void 0;\n      }\n    }(r)) || n && r && \"number\" == typeof r.length) {\n      e && (r = e);\n      var a = 0;\n      return function () {\n        return a >= r.length ? {\n          done: !0\n        } : {\n          done: !1,\n          value: r[a++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  return (e = r[Symbol.iterator]()).next.bind(e);\n}\n\nfunction n(t, n) {\n  return void 0 === n && (n = \"{$origin}\\n{$ttl}\\n\\n; SOA Record\\n{name} {ttl}    IN  SOA {mname}{rname}(\\n{serial} ;serial\\n{refresh} ;refresh\\n{retry} ;retry\\n{expire} ;expire\\n{minimum} ;minimum ttl\\n)\\n\\n; NS Records\\n{ns}\\n\\n; MX Records\\n{mx}\\n\\n; A Records\\n{a}\\n\\n; AAAA Records\\n{aaaa}\\n\\n; CNAME Records\\n{cname}\\n\\n; PTR Records\\n{ptr}\\n\\n; TXT Records\\n{txt}\\n\\n; SRV Records\\n{srv}\\n\\n; SPF Records\\n{spf}\\n\\n; URI Records\\n{uri}\\n\"), n = function (t, r) {\n    var n = \"\";\n    return void 0 !== t && (n += \"$ORIGIN \" + t), r.replace(\"{$origin}\", n);\n  }(t.$origin, n), n = function (t, r) {\n    var n = \"\";\n    return void 0 !== t && (n += \"$TTL \" + t), r.replace(\"{$ttl}\", n);\n  }(t.$ttl, n), n = function (t, r) {\n    var n = r;\n    if (void 0 !== t) for (var e in t.name = t.name || \"@\", t.ttl = t.ttl || \"\", t) n = n.replace(\"{\" + e + \"}\", t[e] + \"\\t\");\n    return n;\n  }(t.soa, n), n = function (t, n) {\n    var e = \"\";\n    if (t) for (var a, i = r(t); !(a = i()).done;) {\n      var s = a.value;\n      e += (s.name || \"@\") + \"\\t\", s.ttl && (e += s.ttl + \"\\t\"), e += \"IN\\tNS\\t\" + s.host + \"\\n\";\n    }\n    return n.replace(\"{ns}\", e);\n  }(t.ns, n), n = function (t, n) {\n    var e = \"\";\n    if (t) for (var a, i = r(t); !(a = i()).done;) {\n      var s = a.value;\n      e += (s.name || \"@\") + \"\\t\", s.ttl && (e += s.ttl + \"\\t\"), e += \"IN\\tA\\t\" + s.ip + \"\\n\";\n    }\n    return n.replace(\"{a}\", e);\n  }(t.a, n), n = function (t, n) {\n    var e = \"\";\n    if (t) for (var a, i = r(t); !(a = i()).done;) {\n      var s = a.value;\n      e += (s.name || \"@\") + \"\\t\", s.ttl && (e += s.ttl + \"\\t\"), e += \"IN\\tAAAA\\t\" + s.ip + \"\\n\";\n    }\n    return n.replace(\"{aaaa}\", e);\n  }(t.aaaa, n), n = function (t, n) {\n    var e = \"\";\n    if (t) for (var a, i = r(t); !(a = i()).done;) {\n      var s = a.value;\n      e += (s.name || \"@\") + \"\\t\", s.ttl && (e += s.ttl + \"\\t\"), e += \"IN\\tCNAME\\t\" + s.alias + \"\\n\";\n    }\n    return n.replace(\"{cname}\", e);\n  }(t.cname, n), n = function (t, n) {\n    var e = \"\";\n    if (t) for (var a, i = r(t); !(a = i()).done;) {\n      var s = a.value;\n      e += (s.name || \"@\") + \"\\t\", s.ttl && (e += s.ttl + \"\\t\"), e += \"IN\\tMX\\t\" + s.preference + \"\\t\" + s.host + \"\\n\";\n    }\n    return n.replace(\"{mx}\", e);\n  }(t.mx, n), n = function (t, n) {\n    var e = \"\";\n    if (t) for (var a, i = r(t); !(a = i()).done;) {\n      var s = a.value;\n      e += (s.name || \"@\") + \"\\t\", s.ttl && (e += s.ttl + \"\\t\"), e += \"IN\\tPTR\\t\" + s.host + \"\\n\";\n    }\n    return n.replace(\"{ptr}\", e);\n  }(t.ptr, n), n = function (t, n) {\n    var e = \"\";\n    if (t) for (var a, i = r(t); !(a = i()).done;) {\n      var s = a.value;\n      e += (s.name || \"@\") + \"\\t\", s.ttl && (e += s.ttl + \"\\t\"), e += \"IN\\tTXT\\t\";\n      var o = s.txt;\n      \"string\" == typeof o ? e += '\"' + o + '\"' : o instanceof Array && (e += o.map(function (t) {\n        return '\"' + t + '\"';\n      }).join(\" \")), e += \"\\n\";\n    }\n    return n.replace(\"{txt}\", e);\n  }(t.txt, n), n = function (t, n) {\n    var e = \"\";\n    if (t) for (var a, i = r(t); !(a = i()).done;) {\n      var s = a.value;\n      e += (s.name || \"@\") + \"\\t\", s.ttl && (e += s.ttl + \"\\t\"), e += \"IN\\tSRV\\t\" + s.priority + \"\\t\", e += s.weight + \"\\t\", e += s.port + \"\\t\", e += s.target + \"\\n\";\n    }\n    return n.replace(\"{srv}\", e);\n  }(t.srv, n), n = function (t, n) {\n    var e = \"\";\n    if (t) for (var a, i = r(t); !(a = i()).done;) {\n      var s = a.value;\n      e += (s.name || \"@\") + \"\\t\", s.ttl && (e += s.ttl + \"\\t\"), e += \"IN\\tSPF\\t\" + s.data + \"\\n\";\n    }\n    return n.replace(\"{spf}\", e);\n  }(t.spf, n), (n = function (t, r) {\n    r = (r = r.replace(\"{zone}\", t.$origin || !!t.soa && t.soa.name || \"\")).replace(\"{datetime}\", new Date().toISOString());\n    var n = Math.round(Date.now() / 1e3);\n    return r.replace(\"{time}\", \"\" + n);\n  }(t, n = function (t, n) {\n    var e = \"\";\n    if (t) for (var a, i = r(t); !(a = i()).done;) {\n      var s = a.value;\n      e += (s.name || \"@\") + \"\\t\", s.ttl && (e += s.ttl + \"\\t\"), e += \"IN\\tURI\\t\" + s.priority + \"\\t\", e += s.weight + \"\\t\", e += '\"' + s.target + '\"\\n';\n    }\n    return n.replace(\"{uri}\", e);\n  }(t.uri, n))).replace(/\\n{2,}/gim, \"\\n\\n\");\n}\n\nfunction e(t) {\n  return function (t) {\n    for (var n, e = {}, g = r(t.split(\"\\n\")); !(n = g()).done;) {\n      var h = n.value;\n\n      if (h && h.trim()) {\n        var d = h.toUpperCase();\n        /\\s+TXT\\s+/.test(d) ? (e.txt = e.txt || [], e.txt.push(u(h))) : 0 === d.indexOf(\"$ORIGIN\") ? e.$origin = h.split(/\\s+/g)[1] : 0 === d.indexOf(\"$TTL\") ? e.$ttl = parseInt(h.split(/\\s+/g)[1], 10) : /\\s+SOA\\s+/.test(d) ? e.soa = a(h) : /\\s+NS\\s+/.test(d) ? (e.ns = e.ns || [], e.ns.push(i(h))) : /\\s+A\\s+/.test(d) ? (e.a = e.a || [], e.a.push(s(h, e.a))) : /\\s+AAAA\\s+/.test(d) ? (e.aaaa = e.aaaa || [], e.aaaa.push(o(h))) : /\\s+CNAME\\s+/.test(d) ? (e.cname = e.cname || [], e.cname.push(l(h))) : /\\s+MX\\s+/.test(d) ? (e.mx = e.mx || [], e.mx.push(p(h))) : /\\s+PTR\\s+/.test(d) ? (e.ptr = e.ptr || [], e.ptr.push(c(h, e.ptr, e.$origin))) : /\\s+SRV\\s+/.test(d) ? (e.srv = e.srv || [], e.srv.push(f(h))) : /\\s+SPF\\s+/.test(d) ? (e.spf = e.spf || [], e.spf.push(m(h))) : /\\s+URI\\s+/.test(d) && (e.uri = e.uri || [], e.uri.push(v(h)));\n      }\n    }\n\n    return e;\n  }(t = function (t) {\n    for (var r = [], n = /\\([\\s\\S]*?\\)/gim, e = n.exec(t); null !== e;) {\n      var a = e[0].replace(/\\s+/gm, \" \");\n      r.push({\n        match: e,\n        replacement: a\n      }), e = n.exec(t);\n    }\n\n    for (var i = t.split(\"\"), s = 0, o = r; s < o.length; s++) {\n      var l = o[s],\n          p = l.match;\n      i.splice(p.index, p[0].length, l.replacement);\n    }\n\n    return i.join(\"\").replace(/\\(|\\)/gim, \" \");\n  }(t = function (t) {\n    return t.replace(/(^|[^\\\\]);.*/g, function (t, r) {\n      return r || \"\";\n    });\n  }(t)));\n}\n\nfunction a(t) {\n  var r = {},\n      n = t.trim().split(/\\s+/g),\n      e = n.length;\n  return r.name = n[0], r.minimum = parseInt(n[e - 1], 10), r.expire = parseInt(n[e - 2], 10), r.retry = parseInt(n[e - 3], 10), r.refresh = parseInt(n[e - 4], 10), r.serial = parseInt(n[e - 5], 10), r.rname = n[e - 6], r.mname = n[e - 7], isNaN(n[1]) || (r.ttl = parseInt(n[1], 10)), r;\n}\n\nfunction i(t) {\n  var r = t.trim().split(/\\s+/g),\n      n = {\n    name: r[0],\n    host: r[r.length - 1]\n  };\n  return isNaN(r[1]) || (n.ttl = parseInt(r[1], 10)), n;\n}\n\nfunction s(t, r) {\n  var n = t.trim().split(/\\s+/g),\n      e = t.trim().toUpperCase().split(/\\s+/g),\n      a = {\n    name: n[0],\n    ip: n[n.length - 1]\n  };\n  return 0 === e.lastIndexOf(\"A\") && (a.name = r.length ? r[r.length - 1].name : \"@\"), isNaN(n[1]) || (a.ttl = parseInt(n[1], 10)), a;\n}\n\nfunction o(t) {\n  var r = t.trim().split(/\\s+/g),\n      n = {\n    name: r[0],\n    ip: r[r.length - 1]\n  };\n  return isNaN(r[1]) || (n.ttl = parseInt(r[1], 10)), n;\n}\n\nfunction l(t) {\n  var r = t.trim().split(/\\s+/g),\n      n = {\n    name: r[0],\n    alias: r[r.length - 1]\n  };\n  return isNaN(r[1]) || (n.ttl = parseInt(r[1], 10)), n;\n}\n\nfunction p(t) {\n  var r = t.trim().split(/\\s+/g),\n      n = r.length,\n      e = {\n    name: r[0],\n    preference: parseInt(r[n - 2], 10),\n    host: r[n - 1]\n  };\n  return isNaN(r[1]) || (e.ttl = parseInt(r[1], 10)), e;\n}\n\nfunction u(t) {\n  var r = t.trim().match(/[^\\s\"']+|\"[^\"]*\"|'[^']*'/g);\n  if (!r) throw new Error(\"Failure to tokenize TXT record\");\n  var n,\n      e = r.length,\n      a = r.indexOf(\"TXT\");\n\n  function i(t) {\n    return t.indexOf('\"') > -1 && (t = t.split('\"')[1]), t;\n  }\n\n  n = e - a - 1 > 1 ? [].concat(r.slice(a + 1).map(i)) : i(r[e - 1]);\n  var s = {\n    name: r[0],\n    txt: n\n  };\n  return isNaN(r[1]) || (s.ttl = parseInt(r[1], 10)), s;\n}\n\nfunction c(t, r, n) {\n  var e = t.trim().split(/\\s+/g);\n  0 === t.trim().toUpperCase().split(/\\s+/g).lastIndexOf(\"PTR\") && r[r.length - 1] && e.unshift(r[r.length - 1].name);\n  var a = {\n    name: e[0],\n    fullname: e[0] + \".\" + n,\n    host: e[e.length - 1]\n  };\n  return isNaN(e[1]) || (a.ttl = parseInt(e[1], 10)), a;\n}\n\nfunction f(t) {\n  var r = t.trim().split(/\\s+/g),\n      n = r.length,\n      e = {\n    name: r[0],\n    target: r[n - 1],\n    priority: parseInt(r[n - 4], 10),\n    weight: parseInt(r[n - 3], 10),\n    port: parseInt(r[n - 2], 10)\n  };\n  return isNaN(r[1]) || (e.ttl = parseInt(r[1], 10)), e;\n}\n\nfunction m(t) {\n  for (var r = t.trim().split(/\\s+/g), n = {\n    name: r[0],\n    data: \"\"\n  }, e = r.length; e-- > 4;) n.data = r[e] + \" \" + n.data.trim();\n\n  return isNaN(r[1]) || (n.ttl = parseInt(r[1], 10)), n;\n}\n\nfunction v(t) {\n  var r = t.trim().split(/\\s+/g),\n      n = r.length,\n      e = {\n    name: r[0],\n    target: r[n - 1].replace(/\"/g, \"\"),\n    priority: parseInt(r[n - 3], 10),\n    weight: parseInt(r[n - 2], 10)\n  };\n  return isNaN(r[1]) || (e.ttl = parseInt(r[1], 10)), e;\n}\n\nexports.ZoneFile = function () {\n  function t(t) {\n    this.jsonZoneFile = \"object\" == typeof t ? JSON.parse(JSON.stringify(t)) : \"string\" == typeof t ? e(t) : void 0;\n  }\n\n  var r = t.prototype;\n  return r.toJSON = function () {\n    return this.jsonZoneFile;\n  }, r.toString = function () {\n    return n(this.toJSON());\n  }, t;\n}(), exports.makeZoneFile = n, exports.parseZoneFile = e;","map":{"version":3,"mappings":"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","names":["makeZoneFile","jsonZoneFile","template","data","ret","replace","processOrigin","$origin","processTTL","$ttl","key","name","ttl","processSOA","soa","record","host","processNS","ns","ip","processA","a","processAAAA","aaaa","alias","processCNAME","cname","preference","processMX","mx","processPTR","ptr","txtData","txt","Array","map","datum","join","processTXT","priority","weight","port","target","processSRV","srv","processSPF","spf","Date","toISOString","time","Math","round","now","processValues","processURI","uri","parseZoneFile","text","g","split","rr","trim","uRR","toUpperCase","test","push","parseTXT","indexOf","parseInt","parseSOA","parseNS","parseA","parseAAAA","parseCNAME","parseMX","parsePTR","parseSRV","parseSPF","parseURI","parseRRs","captured","re","match","exec","replacement","arrText","s","o","cur","splice","index","length","flatten","_m","g1","removeComments","rrTokens","l","minimum","expire","retry","refresh","serial","rname","mname","isNaN","result","recordsSoFar","urrTokens","lastIndexOf","Error","tokenTxt","indexTXT","stripText","slice","currentOrigin","unshift","fullname","zoneFile","JSON","parse","stringify","undefined","toJSON","this","toString"],"sources":["D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\zone-file\\src\\makeZoneFile.ts","D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\zone-file\\src\\zoneFileTemplate.ts","D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\zone-file\\src\\parseZoneFile.ts","D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\zone-file\\src\\zoneFile.ts"],"sourcesContent":["import {\n  AType,\n  CNAMEType,\n  MXType,\n  NSType,\n  SoaType,\n  SPFType,\n  SRVType,\n  TXTType,\n  URIType,\n  ZoneFileObject,\n} from './zoneFile';\n\nimport { getZoneFileTemplate } from './zoneFileTemplate';\n\nexport function makeZoneFile(jsonZoneFile: ZoneFileObject, template: string = getZoneFileTemplate()) {\n  template = processOrigin(jsonZoneFile['$origin'], template);\n  template = processTTL(jsonZoneFile['$ttl'], template);\n  template = processSOA(jsonZoneFile['soa'], template);\n  template = processNS(jsonZoneFile['ns'], template);\n  template = processA(jsonZoneFile['a'], template);\n  template = processAAAA(jsonZoneFile['aaaa'], template);\n  template = processCNAME(jsonZoneFile['cname'], template);\n  template = processMX(jsonZoneFile['mx'], template);\n  template = processPTR(jsonZoneFile['ptr'], template);\n  template = processTXT(jsonZoneFile['txt'], template);\n  template = processSRV(jsonZoneFile['srv'], template);\n  template = processSPF(jsonZoneFile['spf'], template);\n  template = processURI(jsonZoneFile['uri'], template);\n  template = processValues(jsonZoneFile, template);\n  return template.replace(/\\n{2,}/gim, '\\n\\n');\n}\n\nfunction processOrigin(data: string | undefined, template: string) {\n  let ret = '';\n  if (typeof data !== 'undefined') {\n    ret += '$ORIGIN ' + data;\n  }\n  return template.replace('{$origin}', ret);\n}\n\nfunction processTTL(data: number | undefined, template: string) {\n  let ret = '';\n  if (typeof data !== 'undefined') {\n    ret += '$TTL ' + data;\n  }\n  return template.replace('{$ttl}', ret);\n}\n\nfunction processSOA(data: SoaType | undefined, template: string) {\n  let ret = template;\n  if (typeof data !== 'undefined') {\n    data.name = data.name || '@';\n    data.ttl = data.ttl || '';\n    for (const key in data) {\n      const value = (data as Record<string, string>)[key];\n      ret = ret.replace('{' + key + '}', value + '\\t');\n    }\n  }\n  return ret;\n}\n\nfunction processNS(data: NSType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tNS\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{ns}', ret);\n}\n\nfunction processA(data: AType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tA\\t' + record.ip + '\\n';\n    }\n  }\n  return template.replace('{a}', ret);\n}\n\nfunction processAAAA(data: AType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tAAAA\\t' + record.ip + '\\n';\n    }\n  }\n  return template.replace('{aaaa}', ret);\n}\n\nfunction processCNAME(data: CNAMEType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tCNAME\\t' + record.alias + '\\n';\n    }\n  }\n  return template.replace('{cname}', ret);\n}\n\nfunction processMX(data: MXType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tMX\\t' + record.preference + '\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{mx}', ret);\n}\n\nfunction processPTR(data: NSType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tPTR\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{ptr}', ret);\n}\n\nfunction processTXT(data: TXTType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tTXT\\t';\n      const txtData = record.txt;\n      if (typeof txtData === 'string') {\n        ret += '\"' + txtData + '\"';\n      } else if (txtData instanceof Array) {\n        ret += txtData\n          .map(function(datum) {\n            return '\"' + datum + '\"';\n          })\n          .join(' ');\n      }\n      ret += '\\n';\n    }\n  }\n  return template.replace('{txt}', ret);\n}\n\nfunction processSRV(data: SRVType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSRV\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += record.port + '\\t';\n      ret += record.target + '\\n';\n    }\n  }\n  return template.replace('{srv}', ret);\n}\n\nfunction processSPF(data: SPFType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSPF\\t' + record.data + '\\n';\n    }\n  }\n  return template.replace('{spf}', ret);\n}\n\nfunction processURI(data: URIType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tURI\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += '\"' + record.target + '\"\\n';\n    }\n  }\n  return template.replace('{uri}', ret);\n}\n\nfunction processValues(jsonZoneFile: ZoneFileObject, template: string) {\n  template = template.replace(\n    '{zone}',\n    jsonZoneFile['$origin'] || (jsonZoneFile['soa'] ? jsonZoneFile['soa']['name'] : false) || ''\n  );\n  template = template.replace('{datetime}', new Date().toISOString());\n  const time = Math.round(Date.now() / 1000);\n  return template.replace('{time}', `${time}`);\n}\n","export function getZoneFileTemplate() {\n  return '{$origin}\\n\\\n{$ttl}\\n\\\n\\n\\\n; SOA Record\\n\\\n{name} {ttl}    IN  SOA {mname}{rname}(\\n\\\n{serial} ;serial\\n\\\n{refresh} ;refresh\\n\\\n{retry} ;retry\\n\\\n{expire} ;expire\\n\\\n{minimum} ;minimum ttl\\n\\\n)\\n\\\n\\n\\\n; NS Records\\n\\\n{ns}\\n\\\n\\n\\\n; MX Records\\n\\\n{mx}\\n\\\n\\n\\\n; A Records\\n\\\n{a}\\n\\\n\\n\\\n; AAAA Records\\n\\\n{aaaa}\\n\\\n\\n\\\n; CNAME Records\\n\\\n{cname}\\n\\\n\\n\\\n; PTR Records\\n\\\n{ptr}\\n\\\n\\n\\\n; TXT Records\\n\\\n{txt}\\n\\\n\\n\\\n; SRV Records\\n\\\n{srv}\\n\\\n\\n\\\n; SPF Records\\n\\\n{spf}\\n\\\n\\n\\\n; URI Records\\n\\\n{uri}\\n\\\n';\n}\n","import {\n  NSType,\n  AType,\n  CNAMEType,\n  MXType,\n  TXTType,\n  SRVType,\n  SPFType,\n  URIType,\n  ZoneFileObject,\n  SoaType,\n} from './zoneFile';\n\nexport function parseZoneFile(text: string) {\n  text = removeComments(text);\n  text = flatten(text);\n  return parseRRs(text);\n}\n\nfunction removeComments(text: string) {\n  const re = /(^|[^\\\\]);.*/g;\n  return text.replace(re, function(_m, g1) {\n    return g1 ? g1 : ''; // if g1 is set/matched, re-insert it, else remove\n  });\n}\n\nfunction flatten(text: string) {\n  const captured = [];\n  const re = /\\([\\s\\S]*?\\)/gim;\n  let match = re.exec(text);\n  while (match !== null) {\n    const replacement = match[0].replace(/\\s+/gm, ' ');\n    captured.push({ match, replacement });\n    // captured Text, index, input\n    match = re.exec(text);\n  }\n  const arrText = text.split('');\n  for (const cur of captured) {\n    const { match, replacement } = cur;\n    arrText.splice(match.index, match[0].length, replacement);\n  }\n  return arrText.join('').replace(/\\(|\\)/gim, ' ');\n}\n\nfunction parseRRs(text: string) {\n  const ret: ZoneFileObject = {};\n  const rrs = text.split('\\n');\n  for (const rr of rrs) {\n    if (!rr || !rr.trim()) {\n      continue;\n    }\n    const uRR = rr.toUpperCase();\n    if (/\\s+TXT\\s+/.test(uRR)) {\n      ret.txt = ret.txt || [];\n      ret.txt.push(parseTXT(rr));\n    } else if (uRR.indexOf('$ORIGIN') === 0) {\n      ret.$origin = rr.split(/\\s+/g)[1];\n    } else if (uRR.indexOf('$TTL') === 0) {\n      ret.$ttl = parseInt(rr.split(/\\s+/g)[1], 10);\n    } else if (/\\s+SOA\\s+/.test(uRR)) {\n      ret.soa = parseSOA(rr);\n    } else if (/\\s+NS\\s+/.test(uRR)) {\n      ret.ns = ret.ns || [];\n      ret.ns.push(parseNS(rr));\n    } else if (/\\s+A\\s+/.test(uRR)) {\n      ret.a = ret.a || [];\n      ret.a.push(parseA(rr, ret.a));\n    } else if (/\\s+AAAA\\s+/.test(uRR)) {\n      ret.aaaa = ret.aaaa || [];\n      ret.aaaa.push(parseAAAA(rr));\n    } else if (/\\s+CNAME\\s+/.test(uRR)) {\n      ret.cname = ret.cname || [];\n      ret.cname.push(parseCNAME(rr));\n    } else if (/\\s+MX\\s+/.test(uRR)) {\n      ret.mx = ret.mx || [];\n      ret.mx.push(parseMX(rr));\n    } else if (/\\s+PTR\\s+/.test(uRR)) {\n      ret.ptr = ret.ptr || [];\n      ret.ptr.push(parsePTR(rr, ret.ptr, ret.$origin));\n    } else if (/\\s+SRV\\s+/.test(uRR)) {\n      ret.srv = ret.srv || [];\n      ret.srv.push(parseSRV(rr));\n    } else if (/\\s+SPF\\s+/.test(uRR)) {\n      ret.spf = ret.spf || [];\n      ret.spf.push(parseSPF(rr));\n    } else if (/\\s+URI\\s+/.test(uRR)) {\n      ret.uri = ret.uri || [];\n      ret.uri.push(parseURI(rr));\n    }\n  }\n  return ret;\n}\n\nfunction parseSOA(rr: string) {\n  const soa: SoaType = {};\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  soa.name = rrTokens[0];\n  soa.minimum = parseInt(rrTokens[l - 1], 10);\n  soa.expire = parseInt(rrTokens[l - 2], 10);\n  soa.retry = parseInt(rrTokens[l - 3], 10);\n  soa.refresh = parseInt(rrTokens[l - 4], 10);\n  soa.serial = parseInt(rrTokens[l - 5], 10);\n  soa.rname = rrTokens[l - 6];\n  soa.mname = rrTokens[l - 7];\n  if (!isNaN((rrTokens[1] as unknown) as number)) soa.ttl = parseInt(rrTokens[1], 10);\n  return soa;\n}\n\nfunction parseNS(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: NSType = {\n    name: rrTokens[0],\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseA(rr: string, recordsSoFar: AType[]) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const urrTokens = rr\n    .trim()\n    .toUpperCase()\n    .split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: AType = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1],\n  };\n\n  if (urrTokens.lastIndexOf('A') === 0) {\n    if (recordsSoFar.length) {\n      result.name = recordsSoFar[recordsSoFar.length - 1].name;\n    } else {\n      result.name = '@';\n    }\n  }\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseAAAA(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: AType = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseCNAME(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: CNAMEType = {\n    name: rrTokens[0],\n    alias: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseMX(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: MXType = {\n    name: rrTokens[0],\n    preference: parseInt(rrTokens[l - 2], 10),\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseTXT(rr: string) {\n  const rrTokens = rr.trim().match(/[^\\s\"']+|\"[^\"]*\"|'[^']*'/g);\n  if (!rrTokens) throw new Error('Failure to tokenize TXT record');\n  const l = rrTokens.length;\n  const indexTXT = rrTokens.indexOf('TXT');\n\n  function stripText(txt: string) {\n    if (txt.indexOf('\"') > -1) {\n      txt = txt.split('\"')[1];\n    }\n    return txt;\n  }\n\n  let tokenTxt: string | string[];\n  if (l - indexTXT - 1 > 1) {\n    tokenTxt = [...rrTokens.slice(indexTXT + 1).map(stripText)];\n  } else {\n    tokenTxt = stripText(rrTokens[l - 1]);\n  }\n\n  const result: TXTType = {\n    name: rrTokens[0],\n    txt: tokenTxt,\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parsePTR(rr: string, recordsSoFar: NSType[], currentOrigin: string | undefined) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const urrTokens = rr\n    .trim()\n    .toUpperCase()\n    .split(/\\s+/g);\n\n  if (urrTokens.lastIndexOf('PTR') === 0 && recordsSoFar[recordsSoFar.length - 1]) {\n    rrTokens.unshift(recordsSoFar[recordsSoFar.length - 1].name as string);\n  }\n\n  const l = rrTokens.length;\n  const result: NSType = {\n    name: rrTokens[0],\n    fullname: rrTokens[0] + '.' + currentOrigin,\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSRV(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: SRVType = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1],\n    priority: parseInt(rrTokens[l - 4], 10),\n    weight: parseInt(rrTokens[l - 3], 10),\n    port: parseInt(rrTokens[l - 2], 10),\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSPF(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const result: SPFType = {\n    name: rrTokens[0],\n    data: '',\n  };\n\n  let l = rrTokens.length;\n  while (l-- > 4) {\n    result.data = rrTokens[l] + ' ' + result.data.trim();\n  }\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseURI(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: URIType = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1].replace(/\"/g, ''),\n    priority: parseInt(rrTokens[l - 3], 10),\n    weight: parseInt(rrTokens[l - 2], 10),\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n","import { makeZoneFile } from './makeZoneFile';\nimport { parseZoneFile } from './parseZoneFile';\n\nexport type SoaType = {\n  name?: string;\n  ttl?: number | string;\n  minimum?: number;\n  expire?: number;\n  retry?: number;\n  refresh?: number;\n  serial?: number;\n  rname?: string;\n  mname?: string;\n};\nexport type NSType = { name: string; ttl?: number; host: string; fullname?: string };\nexport type AType = { name: string; ttl?: number; ip: string };\nexport type CNAMEType = { name: string; ttl?: number; alias: string };\nexport type MXType = { name: string; ttl?: number; host: string; preference: number };\nexport type TXTType = { name: string; ttl?: number; txt: string | string[] };\nexport type SRVType = { name: string; ttl?: number; priority: number; weight: number; port: number; target: string };\nexport type SPFType = { name: string; ttl?: number; data: string };\nexport type URIType = { name: string; ttl?: number; priority: number; weight: number; target: string };\n\nexport type ZoneFileObject = {\n  $origin?: string;\n  $ttl?: number;\n  soa?: SoaType;\n  ns?: NSType[];\n  a?: AType[];\n  aaaa?: AType[];\n  cname?: CNAMEType[];\n  mx?: MXType[];\n  ptr?: NSType[];\n  txt?: TXTType[];\n  srv?: SRVType[];\n  spf?: SPFType[];\n  uri?: URIType[];\n  $domain?: string;\n};\n\nexport class ZoneFile {\n  jsonZoneFile: ZoneFileObject;\n\n  constructor(zoneFile: ZoneFileObject | string) {\n    if (typeof zoneFile === 'object') {\n      this.jsonZoneFile = JSON.parse(JSON.stringify(zoneFile));\n    } else if (typeof zoneFile === 'string') {\n      this.jsonZoneFile = parseZoneFile(zoneFile);\n    } else {\n      this.jsonZoneFile = (undefined as unknown) as ZoneFileObject;\n    }\n  }\n\n  toJSON() {\n    return this.jsonZoneFile;\n  }\n\n  toString() {\n    return makeZoneFile(this.toJSON());\n  }\n}\n"]},"metadata":{},"sourceType":"script"}