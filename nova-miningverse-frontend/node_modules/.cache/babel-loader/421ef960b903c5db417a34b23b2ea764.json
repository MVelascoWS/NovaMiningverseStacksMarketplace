{"ast":null,"code":"import { Buffer } from '@stacks/common';\nimport { ClarityType } from '../constants';\n\nconst bufferCV = buffer => {\n  if (buffer.length > 1000000) {\n    throw new Error('Cannot construct clarity buffer that is greater than 1MB');\n  }\n\n  return {\n    type: ClarityType.Buffer,\n    buffer\n  };\n};\n\nconst bufferCVFromString = str => bufferCV(Buffer.from(str));\n\nexport { bufferCV, bufferCVFromString };","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,QAAuB,gBAAvB;AACA,SAASC,WAAT,QAA4B,cAA5B;;AA4BA,MAAMC,QAAQ,GAAIC,MAAD,IAA6B;EAC5C,IAAIA,MAAM,CAACC,MAAP,GAAgB,OAApB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;EACD;;EAED,OAAO;IAAEC,IAAI,EAAEL,WAAW,CAACD,MAApB;IAA4BG;EAA5B,CAAP;AACD,CAND;;AA6BA,MAAMI,kBAAkB,GAAIC,GAAD,IAA2BN,QAAQ,CAACF,MAAM,CAACS,IAAP,CAAYD,GAAZ,CAAD,CAA9D;;AAEA,SAAmBN,QAAnB,EAA6BK,kBAA7B","names":["Buffer","ClarityType","bufferCV","buffer","length","Error","type","bufferCVFromString","str","from"],"sources":["D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\@stacks\\transactions\\src\\clarity\\types\\bufferCV.ts"],"sourcesContent":["import { Buffer } from '@stacks/common';\nimport { ClarityType } from '../constants';\n\ninterface BufferCV {\n  readonly type: ClarityType.Buffer;\n  readonly buffer: Buffer;\n}\n\n/**\n * Converts a buffer to BufferCV clarity type\n *\n * @param {buffer} buffer value to be converted to clarity type\n *\n * @returns {BufferCV} returns instance of type BufferCV\n *\n * @example\n * ```\n *  import { bufferCV } from '@stacks/transactions';\n *\n *  const buffer = Buffer.from('this is a test');\n *  const buf = bufferCV(buffer);\n *  // { type: 2, buffer: <Buffer 74 68 69 73 20 69 73 20 61 20 74 65 73 74> }\n *  const value = buf.buffer.toString();\n *  // this is a test\n * ```\n *\n * @visit\n * {@link https://github.com/hirosystems/stacks.js/blob/master/packages/transactions/tests/clarity.test.ts clarity test cases for more examples}\n */\nconst bufferCV = (buffer: Buffer): BufferCV => {\n  if (buffer.length > 1000000) {\n    throw new Error('Cannot construct clarity buffer that is greater than 1MB');\n  }\n\n  return { type: ClarityType.Buffer, buffer };\n};\n\n/**\n * Converts a string to BufferCV clarity type\n *\n * @param {str} string input to be converted to bufferCV clarity type\n *\n * @returns {BufferCV} returns instance of type BufferCV\n *\n * @example\n * ```\n *  import { bufferCVFromString } from '@stacks/transactions';\n *\n *  const str = 'this is a test';\n *  const buf = bufferCVFromString(str);\n *  // { type: 2, buffer: <Buffer 74 68 69 73 20 69 73 20 61 20 74 65 73 74> }\n *  const value = buf.buffer.toString();\n *  // this is a test\n *```\n *\n * @visit\n * {@link https://github.com/hirosystems/stacks.js/blob/master/packages/transactions/tests/clarity.test.ts clarity test cases for more examples}\n */\nconst bufferCVFromString = (str: string): BufferCV => bufferCV(Buffer.from(str));\n\nexport { BufferCV, bufferCV, bufferCVFromString };\n"]},"metadata":{},"sourceType":"module"}