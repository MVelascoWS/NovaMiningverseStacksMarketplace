{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\NovaMiningverse\\\\Nova-Miningverse\\\\nova-miningverse-frontend\\\\src\\\\components\\\\ContractCallVote.js\",\n    _s = $RefreshSig$();\n\nimport { useConnect } from \"@stacks/connect-react\";\nimport { StacksTestnet } from \"@stacks/network\";\nimport { AnchorMode, PostConditionMode, stringUtf8CV } from \"@stacks/transactions\";\nimport { userSession } from \"./ConnectWallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContractCallVote = () => {\n  _s();\n\n  const {\n    doContractCall\n  } = useConnect();\n\n  function vote(pick) {\n    doContractCall({\n      network: new StacksTestnet(),\n      anchorMode: AnchorMode.Any,\n      contractAddress: \"ST39MJ145BR6S8C315AG2BD61SJ16E208P1FDK3AK\",\n      contractName: \"example-fruit-vote-contract\",\n      functionName: \"vote\",\n      functionArgs: [stringUtf8CV(pick)],\n      postConditionMode: PostConditionMode.Deny,\n      postConditions: [],\n      onFinish: data => {\n        console.log(\"onFinish:\", data);\n        window.open(`https://explorer.stacks.co/txid/${data.txId}?chain=testnet`, \"_blank\").focus();\n      },\n      onCancel: () => {\n        console.log(\"onCancel:\", \"Transaction was canceled\");\n      }\n    });\n  }\n\n  if (!userSession.isUserSignedIn()) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Vote via Smart Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Vote\",\n      onClick: () => vote(\"üçä\"),\n      children: \"Vote for \\uD83C\\uDF4A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Vote\",\n      onClick: () => vote(\"üçé\"),\n      children: \"Vote for \\uD83C\\uDF4E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContractCallVote, \"P3HkHp98suz6H5U4Rb98FIRDOug=\", false, function () {\n  return [useConnect];\n});\n\n_c = ContractCallVote;\nexport default ContractCallVote;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractCallVote\");","map":{"version":3,"names":["useConnect","StacksTestnet","AnchorMode","PostConditionMode","stringUtf8CV","userSession","ContractCallVote","doContractCall","vote","pick","network","anchorMode","Any","contractAddress","contractName","functionName","functionArgs","postConditionMode","Deny","postConditions","onFinish","data","console","log","window","open","txId","focus","onCancel","isUserSignedIn"],"sources":["D:/Projects/NovaMiningverse/Nova-Miningverse/nova-miningverse-frontend/src/components/ContractCallVote.js"],"sourcesContent":["import { useConnect } from \"@stacks/connect-react\";\nimport { StacksTestnet } from \"@stacks/network\";\nimport {\n  AnchorMode,\n  PostConditionMode,\n  stringUtf8CV,\n} from \"@stacks/transactions\";\nimport { userSession } from \"./ConnectWallet\";\n\nconst ContractCallVote = () => {\n  const { doContractCall } = useConnect();\n\n  function vote(pick) {\n    doContractCall({\n      network: new StacksTestnet(),\n      anchorMode: AnchorMode.Any,\n      contractAddress: \"ST39MJ145BR6S8C315AG2BD61SJ16E208P1FDK3AK\",\n      contractName: \"example-fruit-vote-contract\",\n      functionName: \"vote\",\n      functionArgs: [stringUtf8CV(pick)],\n      postConditionMode: PostConditionMode.Deny,\n      postConditions: [],\n      onFinish: (data) => {\n        console.log(\"onFinish:\", data);\n        window\n          .open(\n            `https://explorer.stacks.co/txid/${data.txId}?chain=testnet`,\n            \"_blank\"\n          )\n          .focus();\n      },\n      onCancel: () => {\n        console.log(\"onCancel:\", \"Transaction was canceled\");\n      },\n    });\n  }\n\n  if (!userSession.isUserSignedIn()) {\n    return null;\n  }\n\n  return (\n    <div>\n      <p>Vote via Smart Contract</p>\n      <button className=\"Vote\" onClick={() => vote(\"üçä\")}>\n        Vote for üçä\n      </button>\n      <button className=\"Vote\" onClick={() => vote(\"üçé\")}>\n        Vote for üçé\n      </button>\n    </div>\n  );\n};\n\nexport default ContractCallVote;\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SACEC,UADF,EAEEC,iBAFF,EAGEC,YAHF,QAIO,sBAJP;AAKA,SAASC,WAAT,QAA4B,iBAA5B;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAC7B,MAAM;IAAEC;EAAF,IAAqBP,UAAU,EAArC;;EAEA,SAASQ,IAAT,CAAcC,IAAd,EAAoB;IAClBF,cAAc,CAAC;MACbG,OAAO,EAAE,IAAIT,aAAJ,EADI;MAEbU,UAAU,EAAET,UAAU,CAACU,GAFV;MAGbC,eAAe,EAAE,2CAHJ;MAIbC,YAAY,EAAE,6BAJD;MAKbC,YAAY,EAAE,MALD;MAMbC,YAAY,EAAE,CAACZ,YAAY,CAACK,IAAD,CAAb,CAND;MAObQ,iBAAiB,EAAEd,iBAAiB,CAACe,IAPxB;MAQbC,cAAc,EAAE,EARH;MASbC,QAAQ,EAAGC,IAAD,IAAU;QAClBC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;QACAG,MAAM,CACHC,IADH,CAEK,mCAAkCJ,IAAI,CAACK,IAAK,gBAFjD,EAGI,QAHJ,EAKGC,KALH;MAMD,CAjBY;MAkBbC,QAAQ,EAAE,MAAM;QACdN,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,0BAAzB;MACD;IApBY,CAAD,CAAd;EAsBD;;EAED,IAAI,CAAClB,WAAW,CAACwB,cAAZ,EAAL,EAAmC;IACjC,OAAO,IAAP;EACD;;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,SAAS,EAAC,MAAlB;MAAyB,OAAO,EAAE,MAAMrB,IAAI,CAAC,IAAD,CAA5C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MAAQ,SAAS,EAAC,MAAlB;MAAyB,OAAO,EAAE,MAAMA,IAAI,CAAC,IAAD,CAA5C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA3CD;;GAAMF,gB;UACuBN,U;;;KADvBM,gB;AA6CN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}