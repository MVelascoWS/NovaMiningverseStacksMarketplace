{"ast":null,"code":"import { Logger } from './logger';\nimport { Buffer as BufferPolyfill } from 'buffer/';\nconst AvailableBufferModule = typeof Buffer !== 'undefined' ? Buffer : BufferPolyfill;\nexport { AvailableBufferModule as Buffer };\nexport const BLOCKSTACK_HANDLER = 'blockstack';\nexport function nextYear() {\n  return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\nexport function nextMonth() {\n  return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\nexport function nextHour() {\n  return new Date(new Date().setHours(new Date().getHours() + 1));\n}\nexport function megabytesToBytes(megabytes) {\n  if (!Number.isFinite(megabytes)) {\n    return 0;\n  }\n\n  return Math.floor(megabytes * 1024 * 1024);\n}\nexport function getAesCbcOutputLength(inputByteLength) {\n  const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n  return cipherTextLength;\n}\nexport function getBase64OutputLength(inputByteLength) {\n  const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n  return encodedLength;\n}\nexport function updateQueryStringParameter(uri, key, value) {\n  const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n\n  if (uri.match(re)) {\n    return uri.replace(re, `$1${key}=${value}$2`);\n  } else {\n    return `${uri}${separator}${key}=${value}`;\n  }\n}\nexport function isLaterVersion(v1, v2) {\n  if (v1 === undefined || v1 === '') {\n    v1 = '0.0.0';\n  }\n\n  if (v2 === undefined || v1 === '') {\n    v2 = '0.0.0';\n  }\n\n  const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n  const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n\n  for (let index = 0; index < v2.length; index++) {\n    if (index >= v1.length) {\n      v2tuple.push(0);\n    }\n\n    if (v1tuple[index] < v2tuple[index]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function makeUUID4() {\n  let d = new Date().getTime();\n\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n    d += performance.now();\n  }\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n}\nexport function isSameOriginAbsoluteUrl(uri1, uri2) {\n  try {\n    const parsedUri1 = new URL(uri1);\n    const parsedUri2 = new URL(uri2);\n    const port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n    const port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n    const match = {\n      scheme: parsedUri1.protocol === parsedUri2.protocol,\n      hostname: parsedUri1.hostname === parsedUri2.hostname,\n      port: port1 === port2,\n      absolute: (uri1.includes('http://') || uri1.includes('https://')) && (uri2.includes('http://') || uri2.includes('https://'))\n    };\n    return match.scheme && match.hostname && match.port && match.absolute;\n  } catch (error) {\n    console.log(error);\n    console.log('Parsing error in same URL origin check');\n    return false;\n  }\n}\nexport function getGlobalScope() {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\n\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n  if (usageDesc) {\n    return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  } else {\n    return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  }\n}\n\nexport function getGlobalObject(name) {\n  let {\n    throwIfUnavailable,\n    usageDesc,\n    returnEmptyObject\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let globalScope = undefined;\n\n  try {\n    globalScope = getGlobalScope();\n\n    if (globalScope) {\n      const obj = globalScope[name];\n\n      if (obj) {\n        return obj;\n      }\n    }\n  } catch (error) {\n    Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n  }\n\n  if (throwIfUnavailable) {\n    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n    Logger.error(errMsg);\n    throw new Error(errMsg);\n  }\n\n  if (returnEmptyObject) {\n    return {};\n  }\n\n  return undefined;\n}\nexport function getGlobalObjects(names) {\n  let {\n    throwIfUnavailable,\n    usageDesc,\n    returnEmptyObject\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let globalScope;\n\n  try {\n    globalScope = getGlobalScope();\n  } catch (error) {\n    Logger.error(`Error getting global scope: ${error}`);\n\n    if (throwIfUnavailable) {\n      const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n      Logger.error(errMsg);\n      throw errMsg;\n    } else if (returnEmptyObject) {\n      globalScope = {};\n    }\n  }\n\n  const result = {};\n\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n\n    try {\n      if (globalScope) {\n        const obj = globalScope[name];\n\n        if (obj) {\n          result[name] = obj;\n        } else if (throwIfUnavailable) {\n          const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n          Logger.error(errMsg);\n          throw new Error(errMsg);\n        } else if (returnEmptyObject) {\n          result[name] = {};\n        }\n      }\n    } catch (error) {\n      if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n      }\n    }\n  }\n\n  return result;\n}\nexport function intToBytes(value, signed, byteLength) {\n  return toBuffer(intToBigInt(value, signed), byteLength);\n}\nexport function intToBigInt(value, signed) {\n  let parsedValue = value;\n\n  if (typeof parsedValue === 'number') {\n    if (!Number.isInteger(parsedValue)) {\n      throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n    }\n\n    return BigInt(parsedValue);\n  }\n\n  if (typeof parsedValue === 'string') {\n    if (parsedValue.toLowerCase().startsWith('0x')) {\n      let hex = parsedValue.slice(2);\n      hex = hex.padStart(hex.length + hex.length % 2, '0');\n      parsedValue = AvailableBufferModule.from(hex, 'hex');\n    } else {\n      try {\n        return BigInt(parsedValue);\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          throw new RangeError(`Invalid value. String integer '${parsedValue}' is not finite.`);\n        }\n      }\n    }\n  }\n\n  if (typeof parsedValue === 'bigint') {\n    return parsedValue;\n  }\n\n  if (parsedValue instanceof Uint8Array || AvailableBufferModule.isBuffer(parsedValue)) {\n    if (signed) {\n      const bn = fromTwos(BigInt(`0x${bytesToHex(parsedValue)}`), BigInt(parsedValue.byteLength * 8));\n      return BigInt(bn.toString());\n    } else {\n      return BigInt(`0x${bytesToHex(parsedValue)}`);\n    }\n  }\n\n  if (parsedValue != null && typeof parsedValue === 'object' && parsedValue.constructor.name === 'BN') {\n    return BigInt(parsedValue.toString());\n  }\n\n  throw new TypeError(`Invalid value type. Must be a number, bigint, integer-string, hex-string, or Buffer.`);\n}\nexport function with0x(value) {\n  return !value.startsWith('0x') ? `0x${value}` : value;\n}\nexport function hexToBigInt(hex) {\n  if (typeof hex !== 'string') throw new TypeError(`hexToBigInt: expected string, got ${typeof hex}`);\n  return BigInt(`0x${hex}`);\n}\nexport function intToHex(integer) {\n  let lengthBytes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n  const value = typeof integer === 'bigint' ? integer : intToBigInt(integer, false);\n  return value.toString(16).padStart(lengthBytes * 2, '0');\n}\nexport function hexToInt(hex) {\n  return parseInt(hex, 16);\n}\nexport function toBuffer(value) {\n  let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  const hex = intToHex(value, length);\n  return AvailableBufferModule.from(hexToBytes(hex));\n}\nexport function toTwos(value, width) {\n  if (value < -(BigInt(1) << width - BigInt(1)) || (BigInt(1) << width - BigInt(1)) - BigInt(1) < value) {\n    throw `Unable to represent integer in width: ${width}`;\n  }\n\n  if (value >= BigInt(0)) {\n    return BigInt(value);\n  }\n\n  return value + (BigInt(1) << width);\n}\n\nfunction nthBit(value, n) {\n  return value & BigInt(1) << n;\n}\n\nexport function fromTwos(value, width) {\n  if (nthBit(value, width - BigInt(1))) {\n    return value - (BigInt(1) << width);\n  }\n\n  return value;\n}\nconst hexes = Array.from({\n  length: 256\n}, (_, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(uint8a) {\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n\n  for (const u of uint8a) {\n    hex += hexes[u];\n  }\n\n  return hex;\n}\nexport function hexToBytes(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError(`hexToBytes: expected string, got ${typeof hex}`);\n  }\n\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n\n  return array;\n}\nexport function utf8ToBytes(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n\n  return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array)) throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\nexport function concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n\n  if (!arrays.every(a => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n\n  return result;\n}","map":{"version":3,"mappings":"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","names":["Logger","Buffer","BufferPolyfill","AvailableBufferModule","BLOCKSTACK_HANDLER","nextYear","Date","setFullYear","getFullYear","nextMonth","setMonth","getMonth","nextHour","setHours","getHours","megabytesToBytes","megabytes","Number","isFinite","Math","floor","getAesCbcOutputLength","inputByteLength","cipherTextLength","getBase64OutputLength","encodedLength","ceil","updateQueryStringParameter","uri","key","value","re","RegExp","separator","indexOf","match","replace","isLaterVersion","v1","v2","undefined","v1tuple","split","map","x","parseInt","v2tuple","index","length","push","makeUUID4","d","getTime","performance","now","c","r","random","toString","isSameOriginAbsoluteUrl","uri1","uri2","parsedUri1","URL","parsedUri2","port1","port","protocol","port2","scheme","hostname","absolute","includes","error","console","log","getGlobalScope","self","window","global","Error","getAPIUsageErrorMessage","scopeObject","apiName","usageDesc","getGlobalObject","name","throwIfUnavailable","returnEmptyObject","globalScope","obj","errMsg","getGlobalObjects","names","result","i","intToBytes","signed","byteLength","toBuffer","intToBigInt","parsedValue","isInteger","RangeError","BigInt","toLowerCase","startsWith","hex","slice","padStart","from","SyntaxError","Uint8Array","isBuffer","bn","fromTwos","bytesToHex","constructor","TypeError","with0x","hexToBigInt","intToHex","integer","lengthBytes","hexToInt","hexToBytes","toTwos","width","nthBit","n","hexes","Array","_","uint8a","u","array","j","hexByte","byte","isNaN","utf8ToBytes","str","TextEncoder","encode","toBytes","data","concatBytes","arrays","every","a","reduce","arr","pad","set"],"sources":["D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\@stacks\\common\\src\\utils.ts"],"sourcesContent":["import { Logger } from './logger';\n\n// Buffer module from NodeJS that also works in the browser https://www.npmjs.com/package/buffer\n// > The trailing slash is important, tells module lookup algorithm to use the npm module\n// > named buffer instead of the node.js core module named buffer!\nimport { Buffer as BufferPolyfill } from 'buffer/';\n\n// There can be small type definition differences between the NodeJS Buffer and polyfill Buffer,\n// so export using the type definition from NodeJS (@types/node).\nimport type { Buffer as NodeJSBuffer } from 'buffer';\n\nconst AvailableBufferModule: typeof NodeJSBuffer =\n  // eslint-disable-next-line node/prefer-global/buffer\n  typeof Buffer !== 'undefined' ? Buffer : (BufferPolyfill as any);\n\nexport { AvailableBufferModule as Buffer };\n\n/**\n *  @ignore\n */\nexport const BLOCKSTACK_HANDLER = 'blockstack';\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextYear() {\n  return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextMonth() {\n  return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextHour() {\n  return new Date(new Date().setHours(new Date().getHours() + 1));\n}\n\n/**\n * Converts megabytes to bytes. Returns 0 if the input is not a finite number.\n * @ignore\n */\nexport function megabytesToBytes(megabytes: number): number {\n  if (!Number.isFinite(megabytes)) {\n    return 0;\n  }\n  return Math.floor(megabytes * 1024 * 1024);\n}\n\n/**\n * Calculate the AES-CBC ciphertext output byte length a given input length.\n * AES has a fixed block size of 16-bytes regardless key size.\n * @ignore\n */\nexport function getAesCbcOutputLength(inputByteLength: number) {\n  // AES-CBC block mode rounds up to the next block size.\n  const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n  return cipherTextLength;\n}\n\n/**\n * Calculate the base64 encoded string length for a given input length.\n * This is equivalent to the byte length when the string is ASCII or UTF8-8\n * encoded.\n * @param number\n */\nexport function getBase64OutputLength(inputByteLength: number) {\n  const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n  return encodedLength;\n}\n\n/**\n * Query Strings\n * @private\n * @ignore\n */\n\nexport function updateQueryStringParameter(uri: string, key: string, value: string) {\n  const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n  if (uri.match(re)) {\n    return uri.replace(re, `$1${key}=${value}$2`);\n  } else {\n    return `${uri}${separator}${key}=${value}`;\n  }\n}\n\n/**\n * Versioning\n * @param {string} v1 - the left half of the version inequality\n * @param {string} v2 - right half of the version inequality\n * @returns {bool} iff v1 >= v2\n * @private\n * @ignore\n */\n\nexport function isLaterVersion(v1: string, v2: string) {\n  if (v1 === undefined || v1 === '') {\n    v1 = '0.0.0';\n  }\n\n  if (v2 === undefined || v1 === '') {\n    v2 = '0.0.0';\n  }\n\n  const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n  const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n\n  for (let index = 0; index < v2.length; index++) {\n    if (index >= v1.length) {\n      v2tuple.push(0);\n    }\n    if (v1tuple[index] < v2tuple[index]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * UUIDs\n * @private\n * @ignore\n */\nexport function makeUUID4() {\n  let d = new Date().getTime();\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n    d += performance.now(); // use high-precision timer if available\n  }\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n\n/**\n * Checks if both urls pass the same origin check & are absolute\n * @param  {[type]}  uri1 first uri to check\n * @param  {[type]}  uri2 second uri to check\n * @return {Boolean} true if they pass the same origin check\n * @private\n * @ignore\n */\nexport function isSameOriginAbsoluteUrl(uri1: string, uri2: string) {\n  try {\n    const parsedUri1 = new URL(uri1);\n    const parsedUri2 = new URL(uri2);\n\n    const port1 =\n      parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n    const port2 =\n      parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n\n    const match = {\n      scheme: parsedUri1.protocol === parsedUri2.protocol,\n      hostname: parsedUri1.hostname === parsedUri2.hostname,\n      port: port1 === port2,\n      absolute:\n        (uri1.includes('http://') || uri1.includes('https://')) &&\n        (uri2.includes('http://') || uri2.includes('https://')),\n    };\n\n    return match.scheme && match.hostname && match.port && match.absolute;\n  } catch (error) {\n    console.log(error);\n    console.log('Parsing error in same URL origin check');\n    // Parse error\n    return false;\n  }\n}\n\n/**\n * Returns the global scope `Window`, `WorkerGlobalScope`, or `NodeJS.Global` if available in the\n * currently executing environment.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope\n *\n * This could be switched to `globalThis` once it is standardized and widely available.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\n * @ignore\n */\nexport function getGlobalScope(): Window {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  // This function is meant to be called when accessing APIs that are typically only available in\n  // web-browser/DOM environments, but we also want to support situations where running in Node.js\n  // environment, and a polyfill was added to the Node.js `global` object scope without adding the\n  // `window` global object as well.\n  if (typeof global !== 'undefined') {\n    return global as unknown as Window;\n  }\n  throw new Error(\n    'Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available'\n  );\n}\n\nfunction getAPIUsageErrorMessage(\n  scopeObject: unknown,\n  apiName: string,\n  usageDesc?: string\n): string {\n  if (usageDesc) {\n    return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  } else {\n    return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  }\n}\n\ninterface GetGlobalObjectOptions {\n  /**\n   * Throw an error if the object is not found.\n   * @default false\n   */\n  throwIfUnavailable?: boolean;\n  /**\n   * Additional information to include in an error if thrown.\n   */\n  usageDesc?: string;\n  /**\n   * If the object is not found, return an new empty object instead of undefined.\n   * Requires [[throwIfUnavailable]] to be falsey.\n   * @default false\n   */\n  returnEmptyObject?: boolean;\n}\n\n/**\n * Returns an object from the global scope (`Window` or `WorkerGlobalScope`) if it\n * is available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable and will be\n * `undefined` unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\nexport function getGlobalObject<K extends Extract<keyof Window, string>>(\n  name: K,\n  { throwIfUnavailable, usageDesc, returnEmptyObject }: GetGlobalObjectOptions = {}\n): Window[K] | undefined {\n  let globalScope: Window | undefined = undefined;\n  try {\n    globalScope = getGlobalScope();\n    if (globalScope) {\n      const obj = globalScope[name];\n      if (obj) {\n        return obj;\n      }\n    }\n  } catch (error) {\n    Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n  }\n  if (throwIfUnavailable) {\n    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n    Logger.error(errMsg);\n    throw new Error(errMsg);\n  }\n  if (returnEmptyObject) {\n    return {} as any;\n  }\n  return undefined;\n}\n\n/**\n * Returns a specified subset of objects from the global scope (`Window` or `WorkerGlobalScope`)\n * if they are available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable will be `undefined`\n * unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\nexport function getGlobalObjects<K extends Extract<keyof Window, string>>(\n  names: K[],\n  { throwIfUnavailable, usageDesc, returnEmptyObject }: GetGlobalObjectOptions = {}\n): Pick<Window, K> {\n  let globalScope: Window | undefined;\n  try {\n    globalScope = getGlobalScope();\n  } catch (error) {\n    Logger.error(`Error getting global scope: ${error}`);\n    if (throwIfUnavailable) {\n      const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n      Logger.error(errMsg);\n      throw errMsg;\n    } else if (returnEmptyObject) {\n      globalScope = {} as any;\n    }\n  }\n\n  const result: Pick<Window, K> = {} as any;\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    try {\n      if (globalScope) {\n        const obj = globalScope[name];\n        if (obj) {\n          result[name] = obj;\n        } else if (throwIfUnavailable) {\n          const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n          Logger.error(errMsg);\n          throw new Error(errMsg);\n        } else if (returnEmptyObject) {\n          result[name] = {} as any;\n        }\n      }\n    } catch (error) {\n      if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n      }\n    }\n  }\n  return result;\n}\n// After removing bn.js library provide backward compatibility for users passing bn.js instance\ntype BN = import('bn.js'); // Type only import from @types/bn.js\nexport type IntegerType = number | string | bigint | Uint8Array | BN;\n\n// eslint-disable-next-line node/prefer-global/buffer\nexport function intToBytes(value: IntegerType, signed: boolean, byteLength: number): Buffer {\n  return toBuffer(intToBigInt(value, signed), byteLength);\n}\n\nexport function intToBigInt(value: IntegerType, signed: boolean): bigint {\n  let parsedValue = value;\n\n  if (typeof parsedValue === 'number') {\n    if (!Number.isInteger(parsedValue)) {\n      throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n    }\n    return BigInt(parsedValue);\n  }\n  if (typeof parsedValue === 'string') {\n    // If hex string then convert to buffer then fall through to the buffer condition\n    if (parsedValue.toLowerCase().startsWith('0x')) {\n      // Trim '0x' hex-prefix\n      let hex = parsedValue.slice(2);\n\n      // Allow odd-length strings like `0xf` -- some libs output these, or even just `0x${num.toString(16)}`\n      hex = hex.padStart(hex.length + (hex.length % 2), '0');\n\n      parsedValue = AvailableBufferModule.from(hex, 'hex');\n    } else {\n      try {\n        return BigInt(parsedValue);\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          throw new RangeError(`Invalid value. String integer '${parsedValue}' is not finite.`);\n        }\n      }\n    }\n  }\n  if (typeof parsedValue === 'bigint') {\n    return parsedValue;\n  }\n  if (parsedValue instanceof Uint8Array || AvailableBufferModule.isBuffer(parsedValue)) {\n    if (signed) {\n      // Allow byte arrays smaller than 128-bits to be passed.\n      // This allows positive signed ints like `0x08` (8) or negative signed\n      // ints like `0xf8` (-8) to be passed without having to pad to 16 bytes.\n      const bn = fromTwos(\n        BigInt(`0x${bytesToHex(parsedValue)}`),\n        BigInt(parsedValue.byteLength * 8)\n      );\n      return BigInt(bn.toString());\n    } else {\n      return BigInt(`0x${bytesToHex(parsedValue)}`);\n    }\n  }\n  // After removing bn.js library provide backward compatibility for users passing bn.js instance\n  // For backward compatibility with bn.js check if it's a bn.js instance\n  if (\n    parsedValue != null &&\n    typeof parsedValue === 'object' &&\n    parsedValue.constructor.name === 'BN'\n  ) {\n    return BigInt(parsedValue.toString());\n  }\n  throw new TypeError(\n    `Invalid value type. Must be a number, bigint, integer-string, hex-string, or Buffer.`\n  );\n}\n\nexport function with0x(value: string): string {\n  return !value.startsWith('0x') ? `0x${value}` : value;\n}\n\n/**\n * Converts hex input string to bigint\n * @param hex - hex input string without 0x prefix and in big endian format\n * @example \"6c7cde4d702830c1db34ef7c19e2776f59107afef39084776fc88bc78dbb9656\"\n * @ignore\n */\nexport function hexToBigInt(hex: string): bigint {\n  if (typeof hex !== 'string')\n    throw new TypeError(`hexToBigInt: expected string, got ${typeof hex}`);\n  // Big Endian\n  return BigInt(`0x${hex}`);\n}\n\n/**\n * Converts IntegerType to hex string\n * @ignore\n */\nexport function intToHex(integer: IntegerType, lengthBytes = 8): string {\n  const value = typeof integer === 'bigint' ? integer : intToBigInt(integer, false);\n  return value.toString(16).padStart(lengthBytes * 2, '0');\n}\n\n/**\n * Converts hex string to integer\n * @ignore\n */\nexport function hexToInt(hex: string): number {\n  return parseInt(hex, 16);\n}\n\n/**\n * Converts bigint to buffer type\n * @param {value} bigint value to be converted into buffer\n * @param {length} buffer optional length\n * @return {Buffer} buffer instance in big endian format\n */\nexport function toBuffer(value: bigint, length: number = 16) {\n  const hex = intToHex(value, length);\n  // buffer instance in big endian format\n  return AvailableBufferModule.from(hexToBytes(hex));\n}\n\n/**\n * Converts from signed number to two's complement\n * MIN_VALUE = -(1 << (width - 1))\n * MAX_VALUE =  (1 << (width - 1)) - 1\n * @ignore\n */\nexport function toTwos(value: bigint, width: bigint): bigint {\n  if (\n    value < -(BigInt(1) << (width - BigInt(1))) ||\n    (BigInt(1) << (width - BigInt(1))) - BigInt(1) < value\n  ) {\n    throw `Unable to represent integer in width: ${width}`;\n  }\n  if (value >= BigInt(0)) {\n    return BigInt(value);\n  }\n  return value + (BigInt(1) << width);\n}\n\n/**\n * Returns nth bit (right-to-left, zero-indexed)\n */\nfunction nthBit(value: bigint, n: bigint) {\n  return value & (BigInt(1) << n);\n}\n\n/**\n * Converts from two's complement to signed number\n * @ignore\n */\nexport function fromTwos(value: bigint, width: bigint) {\n  if (nthBit(value, width - BigInt(1))) {\n    return value - (BigInt(1) << width);\n  }\n  return value;\n}\n\n// The following methods are based on `@noble/hashes` implementation\n// https://github.com/paulmillr/noble-hashes\n// Copyright (c) 2022 Paul Miller (https://paulmillr.com)\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the “Software”), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\nconst hexes = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n * @ignore\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (const u of uint8a) {\n    hex += hexes[u];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef')\n * @ignore\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError(`hexToBytes: expected string, got ${typeof hex}`);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\ndeclare const TextEncoder: any;\n\n/** @ignore */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\n/** @ignore */\nexport function toBytes(data: Uint8Array | string): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n * @ignore\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every(a => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}