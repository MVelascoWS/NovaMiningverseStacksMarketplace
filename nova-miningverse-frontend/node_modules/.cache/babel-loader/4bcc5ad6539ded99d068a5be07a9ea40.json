{"ast":null,"code":"export function isSubtleCryptoAvailable() {\n  return typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n}\nexport function isNodeCryptoAvailable(withFeature) {\n  try {\n    const resolvedResult = require.resolve('crypto');\n\n    if (!resolvedResult) {\n      return false;\n    }\n\n    const cryptoModule = require('crypto');\n\n    if (!cryptoModule) {\n      return false;\n    }\n\n    if (withFeature) {\n      const features = withFeature(cryptoModule);\n      return features;\n    }\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nexport const NO_CRYPTO_LIB = 'Crypto lib not found. Either the WebCrypto \"crypto.subtle\" or Node.js \"crypto\" module must be available.';\nexport async function getCryptoLib() {\n  if (isSubtleCryptoAvailable()) {\n    return {\n      lib: crypto.subtle,\n      name: 'subtleCrypto'\n    };\n  } else {\n    try {\n      const nodeCrypto = require('crypto');\n\n      return {\n        lib: nodeCrypto,\n        name: 'nodeCrypto'\n      };\n    } catch (error) {\n      throw new Error(NO_CRYPTO_LIB);\n    }\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,SAAUA,uBAAV,GAAiC;EACrC,OAAO,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,MAAd,KAAyB,WAAjE;AACD;AAKD,OAAM,SAAUC,qBAAV,CACJC,WADI,EAC8D;EAElE,IAAI;IACF,MAAMC,cAAc,GAAGC,OAAO,CAACC,OAAR,CAAgB,QAAhB,CAAvB;;IACA,IAAI,CAACF,cAAL,EAAqB;MACnB,OAAO,KAAP;IACD;;IAED,MAAMG,YAAY,GAAGF,OAAO,CAAC,QAAD,CAA5B;;IACA,IAAI,CAACE,YAAL,EAAmB;MACjB,OAAO,KAAP;IACD;;IACD,IAAIJ,WAAJ,EAAiB;MACf,MAAMK,QAAQ,GAAGL,WAAW,CAACI,YAAD,CAA5B;MACA,OAAOC,QAAP;IACD;;IACD,OAAO,IAAP;EACD,CAfD,CAeE,OAAOC,KAAP,EAAc;IACd,OAAO,KAAP;EACD;AACF;AAED,OAAO,MAAMC,aAAa,GACxB,0GADK;AAoBP,OAAO,eAAeC,YAAf,GAA2B;EAChC,IAAIZ,uBAAuB,EAA3B,EAA+B;IAC7B,OAAO;MACLa,GAAG,EAAEZ,MAAM,CAACC,MADP;MAELY,IAAI,EAAE;IAFD,CAAP;EAID,CALD,MAKO;IACL,IAAI;MAEF,MAAMC,UAAU,GAAGT,OAAO,CAAC,QAAD,CAA1B;;MACA,OAAO;QACLO,GAAG,EAAEE,UADA;QAELD,IAAI,EAAE;MAFD,CAAP;IAID,CAPD,CAOE,OAAOJ,KAAP,EAAc;MACd,MAAM,IAAIM,KAAJ,CAAUL,aAAV,CAAN;IACD;EACF;AACF","names":["isSubtleCryptoAvailable","crypto","subtle","isNodeCryptoAvailable","withFeature","resolvedResult","require","resolve","cryptoModule","features","error","NO_CRYPTO_LIB","getCryptoLib","lib","name","nodeCrypto","Error"],"sources":["D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\@stacks\\encryption\\src\\cryptoUtils.ts"],"sourcesContent":["// @ts-ignore\nimport { Buffer } from '@stacks/common';\nexport function isSubtleCryptoAvailable(): boolean {\n  return typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n}\n\nexport function isNodeCryptoAvailable<T>(\n  withFeature: (nodeCrypto: typeof import('crypto')) => boolean | T\n): false | T;\nexport function isNodeCryptoAvailable<T>(\n  withFeature?: (nodeCrypto: typeof import('crypto')) => boolean | T\n): boolean | T {\n  try {\n    const resolvedResult = require.resolve('crypto');\n    if (!resolvedResult) {\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const cryptoModule = require('crypto') as typeof import('crypto');\n    if (!cryptoModule) {\n      return false;\n    }\n    if (withFeature) {\n      const features = withFeature(cryptoModule);\n      return features;\n    }\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const NO_CRYPTO_LIB =\n  'Crypto lib not found. Either the WebCrypto \"crypto.subtle\" or Node.js \"crypto\" module must be available.';\n\nexport type TriplesecDecryptSignature = (\n  arg: { data: Buffer; key: Buffer },\n  cb: (err: Error | null, buff: Buffer | null) => void\n) => void;\n\nexport interface WebCryptoLib {\n  lib: SubtleCrypto;\n  name: 'subtleCrypto';\n}\n\nexport interface NodeCryptoLib {\n  lib: typeof import('crypto');\n  name: 'nodeCrypto';\n}\n\n// Make async for future version which may lazy load.\n// eslint-disable-next-line @typescript-eslint/require-await\nexport async function getCryptoLib(): Promise<WebCryptoLib | NodeCryptoLib> {\n  if (isSubtleCryptoAvailable()) {\n    return {\n      lib: crypto.subtle,\n      name: 'subtleCrypto',\n    };\n  } else {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const nodeCrypto = require('crypto') as typeof import('crypto');\n      return {\n        lib: nodeCrypto,\n        name: 'nodeCrypto',\n      };\n    } catch (error) {\n      throw new Error(NO_CRYPTO_LIB);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}