{"ast":null,"code":"import { sha256 } from '@noble/hashes/sha256';\nimport { Buffer } from '@stacks/common';\nimport { decode, encode, encodingLength } from 'varuint-bitcoin';\nconst chainPrefix = '\\x18Stacks Message Signing:\\n';\nexport function hashMessage(message) {\n  return Buffer.from(sha256(encodeMessage(message)));\n}\nexport function encodeMessage(message) {\n  const encoded = encode(Buffer.from(message).length);\n  return Buffer.concat([Buffer.from(chainPrefix), encoded, Buffer.from(message)]);\n}\nexport function decodeMessage(encodedMessage) {\n  const messageWithoutChainPrefix = encodedMessage.subarray(1 + 24);\n  const decoded = decode(messageWithoutChainPrefix);\n  const varIntLength = encodingLength(decoded);\n  return messageWithoutChainPrefix.slice(varIntLength);\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,QAAuB,sBAAvB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,cAAzB,QAA+C,iBAA/C;AAIA,MAAMC,WAAW,GAAG,+BAApB;AAEA,OAAM,SAAUC,WAAV,CAAsBC,OAAtB,EAAqC;EACzC,OAAON,MAAM,CAACO,IAAP,CAAYR,MAAM,CAACS,aAAa,CAACF,OAAD,CAAd,CAAlB,CAAP;AACD;AAED,OAAM,SAAUE,aAAV,CAAwBF,OAAxB,EAAgD;EACpD,MAAMG,OAAO,GAAGP,MAAM,CAACF,MAAM,CAACO,IAAP,CAAYD,OAAZ,EAAqBI,MAAtB,CAAtB;EACA,OAAOV,MAAM,CAACW,MAAP,CAAc,CAACX,MAAM,CAACO,IAAP,CAAYH,WAAZ,CAAD,EAA2BK,OAA3B,EAAoCT,MAAM,CAACO,IAAP,CAAYD,OAAZ,CAApC,CAAd,CAAP;AACD;AAED,OAAM,SAAUM,aAAV,CAAwBC,cAAxB,EAA8C;EAGlD,MAAMC,yBAAyB,GAAGD,cAAc,CAACE,QAAf,CAAwB,IAAI,EAA5B,CAAlC;EACA,MAAMC,OAAO,GAAGf,MAAM,CAACa,yBAAD,CAAtB;EACA,MAAMG,YAAY,GAAGd,cAAc,CAACa,OAAD,CAAnC;EAEA,OAAOF,yBAAyB,CAACI,KAA1B,CAAgCD,YAAhC,CAAP;AACD","names":["sha256","Buffer","decode","encode","encodingLength","chainPrefix","hashMessage","message","from","encodeMessage","encoded","length","concat","decodeMessage","encodedMessage","messageWithoutChainPrefix","subarray","decoded","varIntLength","slice"],"sources":["D:\\Projects\\NovaMiningverse\\Nova-Miningverse\\nova-miningverse-frontend\\node_modules\\@stacks\\encryption\\src\\messageSignature.ts"],"sourcesContent":["import { sha256 } from '@noble/hashes/sha256';\nimport { Buffer } from '@stacks/common';\nimport { decode, encode, encodingLength } from 'varuint-bitcoin';\n\n// 'Stacks Message Signing:\\n'.length //  = 24\n// 'Stacks Message Signing:\\n'.length.toString(16) //  = 18\nconst chainPrefix = '\\x18Stacks Message Signing:\\n';\n\nexport function hashMessage(message: string): Buffer {\n  return Buffer.from(sha256(encodeMessage(message)));\n}\n\nexport function encodeMessage(message: string | Buffer): Buffer {\n  const encoded = encode(Buffer.from(message).length);\n  return Buffer.concat([Buffer.from(chainPrefix), encoded, Buffer.from(message)]);\n}\n\nexport function decodeMessage(encodedMessage: Buffer): Buffer {\n  // Remove the chain prefix: 1 for the varint and 24 for the length of the string\n  // 'Stacks Message Signing:\\n'\n  const messageWithoutChainPrefix = encodedMessage.subarray(1 + 24);\n  const decoded = decode(messageWithoutChainPrefix);\n  const varIntLength = encodingLength(decoded);\n  // Remove the varint prefix\n  return messageWithoutChainPrefix.slice(varIntLength);\n}\n"]},"metadata":{},"sourceType":"module"}