{"ast":null,"code":"/*\n * From https://github.com/wzbg/base58check\n * @Author: zyc\n * @Date:   2016-09-11 23:36:05\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = exports.encode = void 0;\n\nvar buffer_1 = require(\"buffer/\");\n\nvar cross_sha256_1 = require(\"cross-sha256\");\n\nvar basex = require(\"base-x\");\n\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\nfunction encode(data, prefix, encoding) {\n  if (prefix === void 0) {\n    prefix = '00';\n  }\n\n  if (encoding === void 0) {\n    encoding = 'hex';\n  }\n\n  if (typeof data === 'string') {\n    data = new buffer_1.Buffer(data, encoding);\n  }\n\n  if (!(data instanceof buffer_1.Buffer)) {\n    throw new TypeError('\"data\" argument must be an Array of Buffers');\n  }\n\n  if (!(prefix instanceof buffer_1.Buffer)) {\n    prefix = new buffer_1.Buffer(prefix, encoding);\n  }\n\n  var hash = buffer_1.Buffer.concat([prefix, data]);\n  hash = cross_sha256_1.hashSha256(hash);\n  hash = cross_sha256_1.hashSha256(hash);\n  hash = buffer_1.Buffer.concat([prefix, data, hash.slice(0, 4)]);\n  return basex(ALPHABET).encode(hash);\n}\n\nexports.encode = encode;\n\nfunction decode(string, encoding) {\n  var buffer = new buffer_1.Buffer(basex(ALPHABET).decode(string));\n  var prefix = buffer.slice(0, 1);\n  var data = buffer.slice(1, -4);\n  var hash = buffer_1.Buffer.concat([prefix, data]);\n  hash = cross_sha256_1.hashSha256(hash);\n  hash = cross_sha256_1.hashSha256(hash);\n  buffer.slice(-4).forEach(function (check, index) {\n    if (check !== hash[index]) {\n      throw new Error('Invalid checksum');\n    }\n  });\n\n  if (encoding) {\n    prefix = prefix.toString(encoding);\n    data = data.toString(encoding);\n  }\n\n  return {\n    prefix: prefix,\n    data: data\n  };\n}\n\nexports.decode = decode;","map":{"version":3,"names":["Object","defineProperty","exports","value","decode","encode","buffer_1","require","cross_sha256_1","basex","ALPHABET","data","prefix","encoding","Buffer","TypeError","hash","concat","hashSha256","slice","string","buffer","forEach","check","index","Error","toString"],"sources":["D:/Projects/NovaMiningverse/Nova-Miningverse/nova-miningverse-frontend/node_modules/c32check/lib/base58check.js"],"sourcesContent":["/*\n * From https://github.com/wzbg/base58check\n * @Author: zyc\n * @Date:   2016-09-11 23:36:05\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nvar buffer_1 = require(\"buffer/\");\nvar cross_sha256_1 = require(\"cross-sha256\");\nvar basex = require(\"base-x\");\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nfunction encode(data, prefix, encoding) {\n    if (prefix === void 0) { prefix = '00'; }\n    if (encoding === void 0) { encoding = 'hex'; }\n    if (typeof data === 'string') {\n        data = new buffer_1.Buffer(data, encoding);\n    }\n    if (!(data instanceof buffer_1.Buffer)) {\n        throw new TypeError('\"data\" argument must be an Array of Buffers');\n    }\n    if (!(prefix instanceof buffer_1.Buffer)) {\n        prefix = new buffer_1.Buffer(prefix, encoding);\n    }\n    var hash = buffer_1.Buffer.concat([prefix, data]);\n    hash = cross_sha256_1.hashSha256(hash);\n    hash = cross_sha256_1.hashSha256(hash);\n    hash = buffer_1.Buffer.concat([prefix, data, hash.slice(0, 4)]);\n    return basex(ALPHABET).encode(hash);\n}\nexports.encode = encode;\nfunction decode(string, encoding) {\n    var buffer = new buffer_1.Buffer(basex(ALPHABET).decode(string));\n    var prefix = buffer.slice(0, 1);\n    var data = buffer.slice(1, -4);\n    var hash = buffer_1.Buffer.concat([prefix, data]);\n    hash = cross_sha256_1.hashSha256(hash);\n    hash = cross_sha256_1.hashSha256(hash);\n    buffer.slice(-4).forEach(function (check, index) {\n        if (check !== hash[index]) {\n            throw new Error('Invalid checksum');\n        }\n    });\n    if (encoding) {\n        prefix = prefix.toString(encoding);\n        data = data.toString(encoding);\n    }\n    return { prefix: prefix, data: data };\n}\nexports.decode = decode;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}